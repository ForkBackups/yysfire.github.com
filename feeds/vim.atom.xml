<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>幽谷奇峰 | 燕雀鸣幽谷，鸿鹄掠奇峰</title><link href="http://yysfire.github.io/" rel="alternate"></link><link href="http://yysfire.github.io/feeds/vim.atom.xml" rel="self"></link><id>http://yysfire.github.io/</id><updated>2012-12-05T15:43:44+08:00</updated><entry><title>让Vim在Gnome-terminal下使用Solarized Colorscheme</title><link href="http://yysfire.github.io/vim/make-vim-to-use-solarized-colorscheme-in-gnome-terminal.html" rel="alternate"></link><updated>2012-12-05T14:23:19+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-12-05:vim/make-vim-to-use-solarized-colorscheme-in-gnome-terminal.html</id><summary type="html">&lt;p&gt;最近给 Vim 安装了一款名叫 &lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;Solarized&lt;/a&gt; 的配色方案，它提供了两种背景：深蓝色和浅黄色。效果截图请参考作者的主页 &amp;lt;&lt;a href="http://ethanschoonover.com/solarized"&gt;http://ethanschoonover.com/solarized&lt;/a&gt;.&amp;gt;&lt;/p&gt;
&lt;p&gt;此款配色方案在 Vim 的图形界面（例如GVim）下可以直接使用，但是，若要在终端模式下使用，就必须先给终端模拟器配置相应的256色的配色板（palettes）。对于 Gnome-terminal 的用户，这个活儿可不好做，作者在其说明文档里并没有作详细地介绍。因为作者在 &lt;a href="https://github.com/altercation/solarized"&gt;main Solarized repository&lt;/a&gt; 里提供了 Xresources 文件，所以，我以为将该文件复制到主目录，改名为 .Xresources 就可以了，其实不然。&lt;/p&gt;
&lt;p&gt;以下就是我久经辗转才弄清楚的配置过程。&lt;/p&gt;
&lt;p&gt;首先，给 Gnome-terminal 新建一个配置文件，例如 solarized.&lt;/p&gt;
&lt;p&gt;然后，到 &lt;a href="https://github.com/sigurdga/gnome-terminal-colors-solarized"&gt;Solarized Colorscheme for Gnome Terminal&lt;/a&gt; 上下载配置脚本：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/sigurdga/gnome-terminal-colors-solarized.git&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;gnome&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;solarized&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;会出现安装提示，在 dark 和 light 主题里任选一个，然后选择刚才新建的 solarized profile，最后输入 YES，按回车即配置成功。&lt;/p&gt;</summary><category term="Vim"></category><category term="Gnome"></category><category term="Terminal"></category><category term="Color"></category></entry><entry><title>Vim 脚本学习笔记</title><link href="http://yysfire.github.io/vim/vimscript-note.html" rel="alternate"></link><updated>2012-12-05T15:43:44+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-12-04:vim/vimscript-note.html</id><summary type="html">
&lt;h2 id="_1"&gt;变量&lt;/h2&gt;
&lt;p&gt;Vimscript 变量范围&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;前缀&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;g: varname&lt;/td&gt;
&lt;td&gt;变量为全局变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s: varname&lt;/td&gt;
&lt;td&gt;变量的范围为当前的脚本文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w: varname&lt;/td&gt;
&lt;td&gt;变量的范围为当前的编辑器窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t: varname&lt;/td&gt;
&lt;td&gt;变量的范围为当前的编辑器选项卡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b: varname&lt;/td&gt;
&lt;td&gt;变量的范围为当前的编辑器缓冲区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;l: varname&lt;/td&gt;
&lt;td&gt;变量的范围为当前的函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a: varname&lt;/td&gt;
&lt;td&gt;变量是当前函数的一个参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v: varname&lt;/td&gt;
&lt;td&gt;变量是 Vim 的预定义变量&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;变量采用 ":let" 命令赋值，同时也占用内存空间。为了删除一个变量可以使用 ":unlet" 命令。例:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;unlet&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这将删除 "s:count" 这个脚本局部变量并释放其占用的内存。如果你并不确定这个变量是否存在，但并不希望系统在它不存在时报错，可以在命令后添加 &lt;code&gt;!&lt;/code&gt;:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;unlet&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;当一个脚本结束时，它使用的局部变量不会自动被删除。下一次脚本被执行时，旧的变量值仍可被使用。&lt;/p&gt;
&lt;h2 id="exists"&gt;&lt;code&gt;exists()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;"exists()" 函数检查一个变量是否已经被定义过了。它的参数是你想检查的变量的名字。而不是变量本身！如果你这样做:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;call_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;那么变量 s:call_count 的值将被用来做检测。你不会得到想的结果。&lt;/p&gt;
&lt;h2 id="vimscript"&gt;Vimscript 中的真和假&lt;/h2&gt;
&lt;p&gt;Vim 把任何非零的值当作真。零代表假。&lt;/p&gt;
&lt;p&gt;如果期待数值类型，Vim 自动把字符串转换为数值。如果使用不以数位开始的字符串，返回的数值为零。所以小心这种代码:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"true"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这里 "true" 会被解读为零，也就是假值！&lt;/p&gt;
&lt;h2 id="_2"&gt;字符串常量&lt;/h2&gt;
&lt;p&gt;你需要使用字符串常量来为字符串变量赋值。字符串常量有两种。第一种是由双引号括起来的，里面可以包含转义序列，例如，&lt;code&gt;\n&lt;/code&gt;用于换行，&lt;code&gt;\"&lt;/code&gt;用于双引号，&lt;code&gt;\u263A&lt;/code&gt;用于 Unicode 笑脸标志，&lt;code&gt;\&amp;lt;ESC&amp;gt;&lt;/code&gt;用于 Escape 键。&lt;/p&gt;
&lt;p&gt;如果你不想使用反斜杠，也可以用单引号括起字符串。所有的字符在单引号内都保持其本来面目，只有单引号本身例外: 输入两个你会得到一个单引号。 因为反斜杠在其中也被作为其本身来对待，你无法使用它来改变其后的字符的意义。&lt;/p&gt;
&lt;h2 id="_3"&gt;表达式&lt;/h2&gt;
&lt;p&gt;已经提到的那些数值，字符串常量和变量都属于表达式。因此任何可以使用表达式的地方，数值，字符串变量和常量都可以使用。其它基本的表达式有:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$NAME&lt;/td&gt;
&lt;td&gt;环境变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;name&lt;/td&gt;
&lt;td&gt;选项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@r&lt;/td&gt;
&lt;td&gt;寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一般的，当 ":echo" 命令遇到多个参数时，会在它们之间加入空格。&lt;/p&gt;
&lt;h2 id="_4"&gt;逻辑操作&lt;/h2&gt;
&lt;p&gt;对数值和字符串都可以做逻辑操作。两个字符串的算术差被用来比较它们的值。这个结果是通过字节值来计算的，对于某些语言，这样做的结果未必正确。&lt;/p&gt;
&lt;p&gt;在比较一个字符串和一个数值时，该字符串将先被转换成一个数值。这容易出错，因为当一个字符串看起来不像数值时，它会被当作 0 对待。&lt;/p&gt;
&lt;h2 id="_5"&gt;字符串比较&lt;/h2&gt;
&lt;p&gt;对于字符串来说还有两种操作:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a =~ b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a !~ b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;左边的 "a" 被当作一个字符串。右边的 "b" 被当作一个匹配模式，正如做查找操作一样。&lt;/p&gt;
&lt;p&gt;在做字符串比较时用到 'ignorecase' 选项。如果你不希望使用该选项，可以在比较时加上 "#" 或 "?"。"#" 表示大小写敏感；"?" 表示忽略大小写。因此 "==?" 比较两字符串是否相等，不计大小写。"!~#" 检查一个模式是否被匹配，同时也考虑大小写。&lt;/p&gt;
&lt;p&gt;":sleep" 命令使 Vim 小憩一下。"50m" 表示休息 50 毫秒。再举一个例子，":sleep 4" 休息 4 秒。&lt;/p&gt;
&lt;h2 id="_6"&gt;命令的续行与拼接&lt;/h2&gt;
&lt;p&gt;Vimscript 中一条较长的命令可以分割成多行来写，但必须用反斜杠来作为续行符，反斜杠作为续行符一般写在下一行的开头。&lt;/p&gt;
&lt;p&gt;相反地，多条命令也可以通过 '|' 字符拼接到一行中来。&lt;/p&gt;
&lt;h2 id="_7"&gt;算术说明&lt;/h2&gt;
&lt;p&gt;在使用算术表达式时，还需要记住一点，在版本 7.2 之前，Vim 只支持整数运算。早期版本中的一个普遍错误是编写类似下面的代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s"&gt;"Step through each file...&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filenum&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filecount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="s"&gt;" Show progress...&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filenum&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;filecount&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
    &lt;span class="s"&gt;" Make progress...&lt;/span&gt;
   &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;process_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filenum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;endfor&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;由于 filenum 始终小于 filecount，整数除法 filenum/filecount 将始终生成 0，因此每次迭代循环都将生成：&lt;code&gt;Now 0% done&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即使对于版本 7.2，如果其中一个运算对象被明确声明为浮点类型，那么 Vim 只支持浮点算术：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="n"&gt;filecount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;234&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;filecount&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="s"&gt;" echoes 2&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;filecount&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;100.0&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="s"&gt;" echoes 2.34&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;到目前为止，脚本内的语句都是由 Vim 直接运行的。用 ":execute" 命令可以执行一个表达式的结果。这是一个创建并执行命令的非常有效的方法。&lt;/p&gt;
&lt;h2 id="execute-normal"&gt;&lt;code&gt;execute&lt;/code&gt; 与 &lt;code&gt;normal&lt;/code&gt; 命令&lt;/h2&gt;
&lt;p&gt;":execute" 命令只能用来执行冒号命令。":normal" 命令可以用来执行普通模式命令。然而，它的参数只能是按表面意义解释的命令字符，不能是表达式。例如:为了使 ":normal" 命令也可以带表达式，可以把 ":execute" 与其连起来使用。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="s"&gt;"normal "&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;normal_commands&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;变量 "normal_commands" 必须包含要执行的普通模式命令。&lt;/p&gt;
&lt;p&gt;必须确保 ":normal" 的参数是一个完整的命令。否则，Vim 碰到参数的结尾就会中止其运行。例如，如果你开始了插入模式，你必须也退出插入模式。&lt;/p&gt;
&lt;h2 id="_8"&gt;函数&lt;/h2&gt;
&lt;p&gt;Vim 允许你定义自己的函数。基本的函数声明如下:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}({&lt;/span&gt;&lt;span class="nx"&gt;var1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;var2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;endfunction&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;注意: 函数名必须以大写字母开始。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当一个函数执行到 ":endfunction" 或 ":return" 语句没有带参数时，该函数返回零。&lt;/p&gt;
&lt;p&gt;如果要重定义一个已经存在的函数，在 "function" 命令后加上&lt;code&gt;!&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="_9"&gt;范围的使用&lt;/h3&gt;
&lt;p&gt;":call" 命令可以带一个行表示的范围。这可以分成两种情况。当一个函数定义时给出了 "range" 关键字时，表示它会自行处理该范围。&lt;/p&gt;
&lt;p&gt;Vim 在调用这样一个函数时给它传递两个参数: "a:firstline" 和 "a:lastline"，用来表示该范围所包括的第一行和最后一行。例如:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Count_words&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;firstline&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nx"&gt;lnum&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;lastline&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lnum&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lnum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;endwhile&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"found "&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" words"&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;endfunction&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;你可以这样调用上面的函数:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;Count_words&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这个函数将被调用一次并显示字数。&lt;/p&gt;
&lt;p&gt;另一种使用范围的方式是在定义函数时不给出 "range" 关键字。Vim 将把光标移动到范围内的每一行，并分别对该行调用此函数。例如:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;  &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"line "&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" contains: "&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;getline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;endfunction&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果你用下面的方式调用该函数:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;它将被执行六次。&lt;/p&gt;
&lt;h3 id="_10"&gt;可变参数&lt;/h3&gt;
&lt;p&gt;Vim 允许你定义参数个数可变的函数。下面的例子给出一个至少有一个参数 (start)，但
可以多达 20 个附加参数的函数:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;变量 "a:1" 表示第一个可选的参数，"a:2" 表示第二个，如此类推。变量 "a:0" 表示
这些参数的个数。例如:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;echohl&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Show is "&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;echohl&lt;/span&gt; &lt;span class="nx"&gt;None&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"  Arg "&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" is "&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;endwhile&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;endfunction&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;上例中 ":echohl" 命令被用来给出接下来的 ":echo" 命令如何高亮输出。":echohl None" 终止高亮。":echon" 命令除了不输出换行符外，和 ":echo" 一样。&lt;/p&gt;
&lt;p&gt;你可以用 a:000 变量，它是所有 "..." 参数的列表。详情见 &lt;code&gt;help: a:000&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id="_11"&gt;函数引用&lt;/h3&gt;
&lt;p&gt;有时使变量指向一个或另一个函数可能有用。要这么做，用 function() 函数。它把函数名转换为引用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意 保存函数引用的变量名必须用大写字母开头，不然和内建函数的名字会引起混淆。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;调用变量指向的函数可以用 call() 函数。它的第一个参数是函数引用，第二个参数是参数构成的列表。&lt;/p&gt;
&lt;p&gt;字典项目通常可以用方括号里的索引得到:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;uk2nl&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;een&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;完成同样操作且无需那么多标点符号的方法:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;uk2nl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;
&lt;span class="n"&gt;een&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这只能用于由 ASCII 字母、数位和下划线组成的键。此方式也可以用于赋值。&lt;/p&gt;
&lt;h3 id="_12"&gt;函数封装&lt;/h3&gt;
&lt;p&gt;为了避免你的函数名同其它的函数名发生冲突，使用这样的方法:
- 在函数名前加上独特的字符串。我通常使用一个缩写。例如，"OW_" 被用在 option
  window 函数上。
- 将你的函数定义放在一个文件内。设置一个全局变量用来表示这些函数是否已经被加载
  了。当再次 source 这个文件的时候，先将这些函数卸载。&lt;/p&gt;
&lt;h2 id="_13"&gt;编写插件&lt;/h2&gt;
&lt;p&gt;首先你得给你的插件起个名字。这个名字应该很清楚地表示该插件的用途。同时应该避免同别的插件用同样的名字而用途不同。请将插件名限制在 8 个字符以内，这样可以使得该插件在老的 Windows 系统也能使用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;SID&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt; 都是用来避免映射的键序列和那些仅仅用于其它映射的映射起冲突。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;&amp;lt;SID&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt; 的区别:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标志&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在脚本外部是可见的。它被用来定义那些用户可能定义映射的映射。&lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt; 是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;无法用键盘输入的特殊代码。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;使用结构：&lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt; 脚本名 映射名，可以使得其它插件使用同样次序的字符来定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;义映射的几率变得非常小。在我们上面的例子中，脚本名是 "Typecorr"，映射&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;名是 "Add"。结果是 &lt;code&gt;&amp;lt;Plug&amp;gt;TypecorrAdd&lt;/code&gt;。只有脚本名和映射名的第一个字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;符是大写的，所以我们可以清楚地看到映射名从什么地方开始。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;SID&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;是脚本的 ID，用来唯一的代表一个脚本。Vim 在内部将 &lt;code&gt;&amp;lt;SID&amp;gt;&lt;/code&gt; 翻译为&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;SNR&amp;gt;123_&lt;/code&gt;，其中 "123" 可以是任何数字。这样一个函数 &lt;code&gt;&amp;lt;SID&amp;gt;Add()&lt;/code&gt; 可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;在一个脚本中被命名为 &lt;code&gt;&amp;lt;SNR&amp;gt;11_Add()&lt;/code&gt;，而在另一个脚本中被命名为&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;SNR&amp;gt;22_Add()&lt;/code&gt;。如果你用 &lt;code&gt;:function&lt;/code&gt; 命令来获得系统中的函数列表你就可&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;以看到了。映射中对 &lt;code&gt;&amp;lt;SID&amp;gt;&lt;/code&gt; 的翻译是完全一样的。这样你才有可能通过一个映&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;射来调用某个脚本中的局部函数。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关于插件的小结:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;语句&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s:name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;脚本的局部变量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;SID&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;脚本 ID，用于局部于脚本的映射和函数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hasmapto()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用来检测插件定义的映射是否已经存在的函数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;Leader&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"mapleader" 的值。用户可以通过该变量定义插件所定义映射&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:map &amp;lt;unique&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;如果一个映射已经存在的话，给出警告信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:noremap &amp;lt;script&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在映射右边仅执行脚本的局部映射，而不检查全局映射。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;exists(":Cmd")&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查一个用户命令是否存在。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_14"&gt;用户命令&lt;/h3&gt;
&lt;p&gt;在使用 &lt;code&gt;:command&lt;/code&gt; 命令时，如果加上 "-buffer" 开关，就可以为某一类型的文件加入一个用户命令，而该命令又只能用于一个缓冲区。例:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;  &lt;span class="n"&gt;Make&lt;/span&gt;  &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="o"&gt;%:&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;以下是有关文件类型插件一些特殊环节：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;语句&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;LocalLeader&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;"maplocalleader" 的值，用户可以通过它来自定义文件类型插件中映射的起始字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:map &amp;lt;buffer&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定义一个仅对缓冲区有效的局部映射。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:noremap &amp;lt;script&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;仅重映射脚本中以 &lt;code&gt;&amp;lt;SID&amp;gt;&lt;/code&gt; 开始的映射。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:setlocal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设定仅对当前缓冲区有效的选项。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:command -buffer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定义一个仅对缓冲区有效的局部命令。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;exists("*s:Func")&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看是否已经定义了某个函数。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;参阅所有插件的特殊环节 &lt;code&gt;:help plugin-special&lt;/code&gt;。&lt;/p&gt;</summary><category term="Vim"></category><category term="Vimscript"></category></entry><entry><title>在 VimWiki 中使用 SyntaxHighlighter 实现代码语法高亮</title><link href="http://yysfire.github.io/vim/vimwiki-syntaxhighlighter.html" rel="alternate"></link><updated>2012-07-10T23:28:42+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-07-10:vim/vimwiki-syntaxhighlighter.html</id><summary type="html">
&lt;p&gt;下载最新的 &lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/download/download.php?sh_current"&gt;SyntaxHighlighter&lt;/a&gt; 3.0.83&lt;/p&gt;
&lt;p&gt;将压缩包里的 scripts 和 styles 文件夹解压到 VimWiki 的 html 文件输出目录下。我将它们都放在syntaxhighlighter目录下。&lt;/p&gt;
&lt;h2 id="syntaxhighlighter"&gt;SyntaxHighlighter 基本用法&lt;/h2&gt;
&lt;h3 id="js"&gt;载入核心JS脚本和样式文件&lt;/h3&gt;
&lt;p&gt;在模板文件的 &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; 标签之间加入以下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"%root_path%syntaxhighlighter/scripts/shCore.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"Stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"%root_path%syntaxhighlighter/styles/shCore.css"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"Stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"%root_path%syntaxhighlighter/styles/shThemeRDark.css"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这段代码的作用是，分别载入核心JS脚本、核心样式文件和主题样式文件。其中，shCore.css 可以用其他的 core 系列的样式文件，例如shCoreDefault.css来代替。同样的，shThemeRDark.css 也可以用其他的 Theme 系列样式文件代替，例如shThemeEclipse.css。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：js和css文件的路径一定要设置正确。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="brush"&gt;载入对应代码的brush脚本&lt;/h3&gt;
&lt;p&gt;如果页面要高亮的代码有Python代码和Javascript代码，那么就再在 &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; 标签之间加入以下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"%root_path%syntaxhighlighter/scripts/shBrushPython.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"%root_path%syntaxhighlighter/scripts/shBrushJScript.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="syntaxhighlighterall"&gt;调用 SyntaxHighlighter.all() 方法&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; 标签前加入以下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="syntaxhighlighter-3083-autoloader"&gt;使用 SyntaxHighlighter 3.0.83 的 AutoLoader 特性&lt;/h2&gt;
&lt;p&gt;SyntaxHighlighter 3.0.83 引入了shAutoLoader.js，可以实现根据页面的内容自动选择加载所需要的 brush 脚本。
使用方法就是在 &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; 标签前加入以下代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"%root_path%syntaxhighlighter/scripts/shAutoloader.js"&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"text/javascript"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"text/javascript"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;root_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'%root_path%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"text/javascript"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;scripts_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;root_path&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'syntaxhighlighter/scripts/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'@'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;scripts_path&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;autoloader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                              &lt;span class="s1"&gt;'applescript            @shBrushAppleScript.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'actionscript3 as3      @shBrushAS3.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'bash shell             @shBrushBash.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'powershell ps          @shBrushPowerShell.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'coldfusion cf          @shBrushColdFusion.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'cpp c                  @shBrushCpp.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'c# c-sharp csharp      @shBrushCSharp.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'css                    @shBrushCss.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'delphi pascal          @shBrushDelphi.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'diff patch pas         @shBrushDiff.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'erl erlang             @shBrushErlang.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'groovy                 @shBrushGroovy.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'java                   @shBrushJava.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'jfx javafx             @shBrushJavaFX.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'js jscript javascript  @shBrushJScript.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'perl pl                @shBrushPerl.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'php                    @shBrushPhp.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'text plain             @shBrushPlain.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'py python              @shBrushPython.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'ruby rails ror rb      @shBrushRuby.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'sass scss              @shBrushSass.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'scala                  @shBrushScala.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'sql                    @shBrushSql.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'vb vbnet               @shBrushVb.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="s1"&gt;'xml xhtml xslt html    @shBrushXml.js'&lt;/span&gt;
                                              &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="syntaxhighlighter-3083"&gt;SyntaxHighlighter 3.0.83 的一些配置选项&lt;/h2&gt;
&lt;p&gt;SyntaxHighlighter的配置选项分为两类，一类是使用&lt;code&gt;SyntaxHighlighter.defaults['配置选项']='值'&lt;/code&gt;的方式配置，另一类是使用&lt;code&gt;SyntaxHighlighter.config.配置选项='值'&lt;/code&gt;的方式配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：配置语句必须在调用SyntaxHighlighter.all()之前&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="syntaxhighlighterdefaults"&gt;使用 &lt;code&gt;SyntaxHighlighter.defaults['配置选项']='值'&lt;/code&gt; 的方式配置的选项&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;配置选项&lt;/th&gt;
&lt;th&gt;缺省值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;auto-links&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;如果此项开启，代码中的超链接文字将被a标签套上，也就可以点击了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;class-name&lt;/td&gt;
&lt;td&gt;''&lt;/td&gt;
&lt;td&gt;为代码块加上自定义样式类，比如加上border&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;collapse&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;在页面刚加载时，代码被折叠起来，如果代码篇幅较大，可以考虑考虑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;first-line&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;行号从这个设置值开始，一般都是1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gutter&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;是否显示行号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;highlight&lt;/td&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;td&gt;高亮显示指定的代码行。可以通过单个数字来高亮显示单行，或者传入一个类似 [1,2,3] 的数组来高亮显示指定的多行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;html-script&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;混合高亮html和script脚本，但是你必须载入xml的笔刷shBrushXml.js&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smart-tabs&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;智能缩进。有时候开启，能确保你的代码格式保持原貌，毕竟通过网页显示后缩进有些变形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tab-size&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;自定义tab宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;toolbar&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;是否显示工具栏（有问号的那个）。如果已将collapse打开，就不要关掉这个，否则就看不到代码了&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以上配置选项都可以在&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;标签的class中使用，例如：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;pre class="brush:php; html-script:true; toolbar:true; collapse:true" title="混合高亮html和php脚本"&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;      &amp;lt;div style="font-weight: bold"&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;br/&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;      &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt;
      &lt;span class="sd"&gt;/***********************************&lt;/span&gt;
&lt;span class="sd"&gt;       ** Multiline block comments&lt;/span&gt;
&lt;span class="sd"&gt;       **********************************/&lt;/span&gt;
      &lt;span class="nv"&gt;$stringWithUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://alexgorbatchev.com"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nv"&gt;$stringWithUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'http://alexgorbatchev.com'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nb"&gt;ob_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"parseOutputBuffer"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// Start Code Buffering&lt;/span&gt;
      &lt;span class="nb"&gt;session_start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="syntaxhighlighterconfig"&gt;使用 &lt;code&gt;SyntaxHighlighter.config.配置选项='值'&lt;/code&gt; 的方式配置的选项&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;配置选项&lt;/th&gt;
&lt;th&gt;缺省值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bloggerMode&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;不理解，没用过&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;strings&lt;/td&gt;
&lt;td&gt;--&lt;/td&gt;
&lt;td&gt;允许用户自定义系统消息:expandSource,help,alert,noBrush,brushNotHtmlScript&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;\/&lt;/td&gt;
&lt;td&gt;配置方法：SyntaxHighlighter.config.strings.noBrush="你是不是忘了拿刷子了？"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stripBrs&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;如果你的编辑软件为每一行的结束自动加上&lt;br&gt;标签,这个选项允许你忽略它们&lt;/br&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tagName&lt;/td&gt;
&lt;td&gt;'pre'&lt;/td&gt;
&lt;td&gt;配置代码块的标签。没事别动，用默认的pre比较好&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_1"&gt;配置示例&lt;/h3&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'toolbar'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//隐藏问号按钮&lt;/span&gt;
&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'class-name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'highlightsetting'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//自定义CSS设置&lt;/span&gt;
&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'auto-links'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//超链接设定显示为文字&lt;/span&gt;
&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//消除Chrome复制时的空白BUG&lt;/span&gt;
&lt;span class="nx"&gt;SyntaxHighlighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;在样式文件中添加：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nc"&gt;.highlightsetting&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/*修正右边滚动条之BUG*/&lt;/span&gt;
    &lt;span class="k"&gt;overflow-y&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/*加入代码边框*/&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#2187BB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="syntaxhighlighter-3083_1"&gt;去掉SyntaxHighlighter 3.0.83 右边的滚动条&lt;/h2&gt;
&lt;p&gt;修改你所使用的 core 系列样式文件，如 shCore.css。&lt;/p&gt;
&lt;h3 id="_2"&gt;方法一：&lt;/h3&gt;
&lt;p&gt;修改&lt;code&gt;.syntaxhighlighter table&lt;/code&gt;：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nc"&gt;.syntaxhighlighter&lt;/span&gt; &lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="_3"&gt;方法二：&lt;/h3&gt;
&lt;p&gt;修改 &lt;code&gt;.syntaxhighlighter&lt;/code&gt;：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nc"&gt;.syntaxhighlighter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_4"&gt;参考网站&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/"&gt;SyntaxHighlighter 官网&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="SyntaxHighlighter"></category><category term="VimWiki"></category><category term="Vim"></category></entry><entry><title>Vim命令拾遗</title><link href="http://yysfire.github.io/vim/vim-command-note.html" rel="alternate"></link><updated>2012-07-10T20:35:49+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-07-10:vim/vim-command-note.html</id><summary type="html">
&lt;p&gt;&lt;code&gt;:reg&lt;/code&gt;: 查看各个寄存器的内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CTRL-R&lt;/code&gt;: 插入寄存器内容。在输入 CTRL-R 和第二个字符之间，'"' 会显示出来，以提示你需要输入寄存器的名字&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;特殊寄存器&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="sc"&gt;'"'&lt;/span&gt; &lt;span class="err"&gt;无名寄存器，包含最近删除或抽出的文本&lt;/span&gt;
        &lt;span class="sc"&gt;'%'&lt;/span&gt; &lt;span class="err"&gt;当前文件名&lt;/span&gt;
        &lt;span class="sc"&gt;'#'&lt;/span&gt; &lt;span class="err"&gt;轮换文件名&lt;/span&gt;
        &lt;span class="sc"&gt;'*'&lt;/span&gt; &lt;span class="err"&gt;剪贴板内容&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;主选择&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="sc"&gt;'+'&lt;/span&gt; &lt;span class="err"&gt;剪贴板内容&lt;/span&gt;
        &lt;span class="sc"&gt;'/'&lt;/span&gt; &lt;span class="err"&gt;最近的搜索模式&lt;/span&gt;
        &lt;span class="sc"&gt;':'&lt;/span&gt; &lt;span class="err"&gt;最近的命令行&lt;/span&gt;
        &lt;span class="sc"&gt;'.'&lt;/span&gt; &lt;span class="err"&gt;最近插入的文本&lt;/span&gt;
        &lt;span class="sc"&gt;'-'&lt;/span&gt; &lt;span class="err"&gt;最近的行内&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;少于一行&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;删除&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;&lt;code&gt;e!&lt;/code&gt;: 放弃所有更动，重新编辑&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:r 文件名&lt;/code&gt;: 在当前光标插入文件内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:r !命令&lt;/code&gt;: 在当前光标插入命令执行结果(:r !date)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;X(大写)&lt;/code&gt;: 删除光标前一个字符&lt;/p&gt;</summary><category term="Vim"></category><category term="Command"></category></entry></feed>