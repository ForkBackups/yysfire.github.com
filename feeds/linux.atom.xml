<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>幽谷奇峰 | 燕雀鸣幽谷，鸿鹄掠奇峰</title><link href="http://yysfire.github.io/" rel="alternate"></link><link href="http://yysfire.github.io/feeds/linux.atom.xml" rel="self"></link><id>http://yysfire.github.io/</id><updated>2014-07-01T17:57:28+08:00</updated><entry><title>Rhythmbox乱码的解决办法</title><link href="http://yysfire.github.io/linux/rhythmbox-garbled.html" rel="alternate"></link><updated>2012-12-15T19:10:07+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-12-15:linux/rhythmbox-garbled.html</id><summary type="html">
&lt;h2 id="_1"&gt;导致乱码的原因&lt;/h2&gt;
&lt;p&gt;大陆的音乐下载下来，标题和内容大都使用GB2312进行编码的，而Ubuntu或其他Linux上面默认使用UTF-8进行解码。这就造成乱码了。&lt;/p&gt;
&lt;h2 id="_2"&gt;解决方法&lt;/h2&gt;
&lt;h3 id="_3"&gt;方法一：修改音乐文件的编码&lt;/h3&gt;
&lt;p&gt;安装python-mutagen&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;convmv&lt;/span&gt; &lt;span class="n"&gt;iconv&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mutagen&lt;/span&gt;
&lt;span class="cp"&gt;#文件名由GBK转换为UTF8&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;convmv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;cp936&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;utf8&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;notest&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;nosmart&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="cp"&gt;#文件内容由GBK到UTF8&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;iconv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;gbk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;utf8&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;newfile&lt;/span&gt;
&lt;span class="cp"&gt;#将 mp3 标签编码 由GBK转换至utf-8&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iname&lt;/span&gt; &lt;span class="s"&gt;"*.mp3"&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;mid3iconv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;GBK&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="_4"&gt;方法二：修改环境变量（推荐）&lt;/h3&gt;
&lt;p&gt;此方法不改变音乐文件本身，只需改变一下环境变量即可。&lt;/p&gt;
&lt;p&gt;打开终端，&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;gedit&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;在最后添加：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;GST_ID3_TAG_ENCODING&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GBK&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;GB18030&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;GST_ID3V2_TAG_ENCODING&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GBK&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;GB18030&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;重启计算机，重新导入音乐，就会发现音乐标签的乱码消失了。&lt;/p&gt;</summary><category term="Rhythmbox"></category><category term="Linux"></category><category term="乱码"></category><category term="mutagen"></category></entry><entry><title>如何查看Linux终端是否支持256色</title><link href="http://yysfire.github.io/linux/how-to-check-linux-terminal-whether-support-256-colors.html" rel="alternate"></link><updated>2012-12-07T23:01:23+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-12-03:linux/how-to-check-linux-terminal-whether-support-256-colors.html</id><summary type="html">&lt;p&gt;运行以下命令, 若256种颜色全部输出，就表示支持256色。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;$ (x=`tput op` y=`printf %76s`;for i in {0..256};do o=00&lt;span class="nv"&gt;$i&lt;/span&gt;;echo -e &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c"&gt;#o&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;-3:3} `tput setaf &lt;span class="nv"&gt;$i&lt;/span&gt;;tput setab &lt;span class="nv"&gt;$i&lt;/span&gt;`&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$x&lt;/span&gt;;done)
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;下列命令会输出你所支持的所有终端模拟器，以及它们支持的颜色位数，可能的值有：8, 15, 16, 52, 64, 88 和 256.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;terminfo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$T `tput -T $T colors`&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nk2&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n20&lt;/span&gt;

&lt;span class="n"&gt;wy370&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wvb&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;Eterm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;
&lt;span class="n"&gt;rxvt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;
&lt;span class="n"&gt;xterm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;
&lt;span class="n"&gt;xterm&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;
&lt;span class="n"&gt;Eterm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;fbterm&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;gnome&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;iTerm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;konsole&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;mlterm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;mrxvt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;putty&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;rxvt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;rxvt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;unicode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bce&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;terminator&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;vte&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;span class="n"&gt;xterm&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;可以在终端的配置文件，例如&lt;code&gt;.bashrc&lt;/code&gt;中加入以下内容，使其支持256色：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;TERM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vte&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/X_resources#Color_scheme_commands"&gt;X_resources#Color_scheme_commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Color"></category><category term="Terminal"></category><category term="TERM"></category><category term="256 color"></category></entry><entry><title>Linux中以不同颜色显示信息</title><link href="http://yysfire.github.io/linux/linux-terminal-color-control-code.html" rel="alternate"></link><updated>2012-12-07T23:00:34+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-12-02:linux/linux-terminal-color-control-code.html</id><summary type="html">&lt;p&gt;用 escape 转义序列来设置文本的显示效果，例如：前景色、背景色和样式。&lt;/p&gt;
&lt;p&gt;基本使用格式是：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\e[STYLE;FG;BGmYour text\e[0m&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;其中，STYLE、FG和BG分别是：样式、前景色和背景色。&lt;/p&gt;
&lt;p&gt;样式的控制码有以下六种：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;代码&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;加粗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;下划线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;闪烁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;反白显示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;不可见&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;颜色的控制码有如下七种：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;前景码&lt;/th&gt;
&lt;th&gt;背景码&lt;/th&gt;
&lt;th&gt;颜色&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;black(黑色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;red(红色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;green(绿色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;yellow(黄色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;blue(蓝色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;magenta(紫红色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;cyan(蓝绿色，青色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;white(白色)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下是打印终端颜色表的代码：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#FileName: PrintBashColor.sh&lt;/span&gt;
&lt;span class="c"&gt;#Description: 打印Bash终端的颜色表&lt;/span&gt;

&lt;span class="k"&gt;for &lt;/span&gt;STYLE in 0 1 4 5 7 8; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;  for &lt;/span&gt;FG in 30 31 32 33 34 35 36 37; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;    for &lt;/span&gt;BG in 40 41 42 43 44 45 46 47; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;      &lt;/span&gt;&lt;span class="nv"&gt;CTRL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\e[${STYLE};${FG};${BG}m&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; -en &lt;span class="s2"&gt;&amp;quot;${CTRL}&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;${STYLE};${FG};${BG}&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; -en &lt;span class="s2"&gt;&amp;quot;\e[0m&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="nb"&gt;  &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="k"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="c"&gt;# Reset&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\e[0m&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="Linux"></category><category term="Color"></category><category term="Terminal"></category></entry><entry><title>Linux命令拾遗</title><link href="http://yysfire.github.io/linux/linux-command-note.html" rel="alternate"></link><updated>2014-07-01T17:57:28+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-12-01:linux/linux-command-note.html</id><summary type="html">
&lt;h2 id="_1"&gt;输出指定的数字序列&lt;/h2&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 直接使用 for 循环，以换行符分隔&lt;/span&gt;
&lt;span class="nv"&gt;$ END&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5;for &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0;i&amp;lt;&lt;span class="nv"&gt;$END&lt;/span&gt;;i++&lt;span class="o"&gt;))&lt;/span&gt;; &lt;span class="k"&gt;do &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;; &lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="c"&gt;# 使用 seq 命令，用 -s 参数指定分隔符&lt;/span&gt;
&lt;span class="nv"&gt;$ END&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5;seq -s&lt;span class="s1"&gt;' '&lt;/span&gt; 1 &lt;span class="nv"&gt;$END&lt;/span&gt;

&lt;span class="c"&gt;# 使用 eval 命令，以空格分隔&lt;/span&gt;
&lt;span class="nv"&gt;$ END&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5;eval &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;1..&lt;span class="nv"&gt;$END&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_2"&gt;打印换行&lt;/h2&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 使用 -e 参数&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;"a\nb"&lt;/span&gt;

&lt;span class="c"&gt;# 使用字符串展开，注意必须是单引号&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;$'a\nb'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_3"&gt;脚本里如何获取脚本所在目录&lt;/h2&gt;
&lt;p&gt;获取脚本自身所在目录：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_4"&gt;进程管理相关命令&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;ps－查看当前正在运行的进程，示例：$ ps
kill {PID}－通过 PID 来停止任意进程，示例：$ kill 1012
killall {Process-name}－通过名称来停止任意进程，示例：$ killall httpd
ps -ag－获取所有正在运行进程的信息，示例：$ ps -ag
kill 0－停止所有的进程（你的 shell 除外），示例：$ kill 0
linux-command &amp;amp;－后台执行进程，示例：$ ls / -R | wc -l &amp;amp;
ps aux－显示进程的所有者，示例：$ ps aux
ps ax | grep process-U-want-to see－查看某个特定的进程，示例：$ ps ax | grep httpd
top－查看当前正运行的进程、内存及 CPU 占用率，示例： $ top&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="dos2unix"&gt;递归批量进行dos2unix转换&lt;/h2&gt;
&lt;p&gt;转换当前目录及子目录下的所有文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;dos2unix&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;dos2unix&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;转换当前目录及子目录下的所有后缀为sh的文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s"&gt;"*.sh"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;dos2unix&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;dos2unix&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="man"&gt;man 使用技巧两则&lt;/h2&gt;
&lt;h3 id="_5"&gt;使用书签&lt;/h3&gt;
&lt;p&gt;man 其实是调用 less 来显示手册页的。因此，在阅读内容比较长的页面时，可以使用书签来标记需要重复阅读的重要内容。&lt;/p&gt;
&lt;p&gt;标记的方法为：先按 m 键，然后在 mark: 后输入标记字母，如 a。需要说明的是，标记符是区分大小写的，也就是说 a 与 A 是两个不同的标记符。 当你需要返回先前设置的书签时，可以按 ' 键（单引号）。此时会显示 goto mark:，输入你设置的标记符即可。&lt;/p&gt;
&lt;h3 id="_6"&gt;测试命令&lt;/h3&gt;
&lt;p&gt;在阅读 man 手册页时想要对命令的用法进行尝试的话，那么可以使用 !。这让你不必打开新的终端，也不用离开 man 手册的阅读页面。在按下 ! 之后，你就可以自由输入所要测试的命令了。完成后，按回车键将返回到 man 手册的阅读页面。&lt;/p&gt;
&lt;h2 id="linux"&gt;实用的Linux命令&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;查看目录的磁盘占用情况 du -h --max-depth=1 | sort -n -r
pgrep：比如，你可以使用 pgrep -u root 来代替 ps -ef | egrep '^root ' | awk '{print $2}'，以便抓取属于 root 的 PID。
pstree：我觉得这个命令很酷，它可以直接列出进程树，或者换句话说是按照树状结构来列出进程。
bc：这个命令在我的系统中没有找到，可能需要安装。这是用来执行计算的一个命令，如使用它来开平方根。
split：这是一个很有用的命令，它可以将一个大文件分割成几个小的部分。比如：split -b 2m largefile LF_ 会将 largefile 分割成带有 LF 文件名前缀且大小为 2 MB 的小文件。
nl：能够显示行号的命令。在阅读脚本或代码时，这个命令应该非常有用。如：nl wireless.h | head。
mkfifo：作者说这是他最喜欢的命令。该命令使得其他命令能够通过一个命名的管道进行通信。嗯，听起来有点空洞。举例说明，先创建一个管道并写入内容： mkfifo ive-been-piped ls -al split/** | head &amp;gt; ive-been-piped&lt;/p&gt;
&lt;p&gt;然后就可以读取了：head ive-been-piped。
ldd：其作用是输出指定文件依赖的动态链接库。比如，通过 ldd /usr/java/jre1.5.0_11/bin/java 可以了解哪些线程库链接到了 java 依赖（动态链接）了哪些库。（感谢 NetSnail 的指正。）
col：可以将 man 手册页保存为无格式的文本文件。如： PAGER=cat man less | col -b &amp;gt; less.txt
xmlwf：能够检测 XML 文档是否良好。比如： curl -s 'http://bashcurescancer.com' &amp;gt; bcc.html xmlwf bcc.html perl -i -pe 's@&lt;br/&gt;@&lt;br&gt;@g' bcc.html xmlwf bcc.html bcc.html:104:2: mismatched tag
lsof：列出打开的文件。如：通过 lsof | grep TCP 可以找到打开的端口。&lt;/br&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Linux"></category><category term="Command"></category></entry><entry><title>修改Ubuntu 12.10登录界面的背景</title><link href="http://yysfire.github.io/linux/change-ubuntu-12.10-login-ui-background.html" rel="alternate"></link><updated>2012-11-04T16:51:53+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-11-04:linux/change-ubuntu-12.10-login-ui-background.html</id><summary type="html">
&lt;p&gt;Ubuntu 12.10(Quantal Quetzal)的默认配置下，登录界面的背景图片和桌面壁纸是一样的，唯一不同的是，登录界面还加上了点格。如果你想改变这一设置，就请按如下步骤操作。&lt;/p&gt;
&lt;p&gt;按 Ctrl-Alt-t 打开终端，运行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo -i
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;进入 root 用户。&lt;/p&gt;
&lt;p&gt;然后，运行以下命令以 lightdm 创建连接到 X Server：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xhost +SI:localuser:lightdm
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;以 lightdm 运行脚本：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;su lightdm -s /bin/bash
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;禁用动态背景切换：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gsettings &lt;span class="nb"&gt;set &lt;/span&gt;com.canonical.unity-greeter draw-user-backgrounds &lt;span class="s1"&gt;'false'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;设定登录界面背景图片：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gsettings &lt;span class="nb"&gt;set &lt;/span&gt;com.canonical.unity-greeter background &lt;span class="s1"&gt;'/path-to-image'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;将 path-to-image 替换成你想使用的图片的正确路径。&lt;/p&gt;
&lt;p&gt;去除登录界面的点格：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gsettings &lt;span class="nb"&gt;set &lt;/span&gt;com.canonical.unity-greeter draw-grid &lt;span class="s1"&gt;'false'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;注销就可以看到设置已生效。&lt;/p&gt;</summary><category term="Ubuntu"></category><category term="Linux"></category></entry><entry><title>SSH使用技巧一则：使用config文件创建别名</title><link href="http://yysfire.github.io/linux/create-ssh-alias.html" rel="alternate"></link><updated>2012-10-30T22:07:58+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-30:linux/create-ssh-alias.html</id><summary type="html">
&lt;h2 id="config"&gt;在config文件中创建别名&lt;/h2&gt;
&lt;p&gt;当你在执行 ssh 命令登录服务器时，有没有被需要输入命令后面的一长串参数感到厌烦呢？比如，名为 serveradmin 的用户要登录到 server.example.com 主机上，需执行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh serveradmin@server.example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;你当然可以使用 alias，但 SSH 本身也提供有相应的解决方案──你可在 SSH 的 config 文件中为需要经常访问的远程主机创建别名。&lt;/p&gt;
&lt;p&gt;首先，找找看你的用户主目录下是否有目录 .ssh，若没有，则使用 mkdir 创建一个；&lt;/p&gt;
&lt;p&gt;然后，使用你喜欢的文本编辑器（如 Vim）来创建 config 配置文件：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vim ~/.ssh/config
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;此 config 文件的权限必须是644：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;chmod 644 ~/.ssh/config
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;仍以前面的例子来说明，假设我要创建的别名为 lt，则加入下面的内容，其中 HostName 为主机名，User 为用户名：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;Host lt
    HostName server.example.com
    User serveradmin
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;现在，你只要执行 &lt;code&gt;ssh lt&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;h2 id="config_1"&gt;config文件中的常用字段&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Host&lt;/td&gt;
&lt;td&gt;指定一个别名（alias）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HostName&lt;/td&gt;
&lt;td&gt;服务器主机名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Port&lt;/td&gt;
&lt;td&gt;连接端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User&lt;/td&gt;
&lt;td&gt;用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IdentityFile&lt;/td&gt;
&lt;td&gt;指定密钥文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PreferredAuthentications&lt;/td&gt;
&lt;td&gt;指定认证方式，通常为 publickey&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下面是一个 config 文件示例：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;Host *
    PreferredAuthentications publickey

Host github1
    HostName github.com
    IdentityFile ~/.ssh/github1_rsa

Host github2
    HostName github.com
    IdentityFile ~/.ssh/github2_rsa

Host gitcafe
    HostName gitcafe.com
    IdentityFile ~/.ssh/gitcafe_rsa
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;前两行表示，下面所有的服务器优先使用密钥认证的方式；&lt;/p&gt;
&lt;p&gt;第4～第10行，设置了两个别名，分别代表两个 github.com 的帐户，使用各自的密钥文件，只要使用下列地址：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git@github1:accountname/reponame.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git@github2:accountname/reponame.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就可以分别连接到各自的帐户。&lt;/p&gt;
&lt;p&gt;最后三行，设置了另一个 Git 服务器 gitcafe.com 的别名和密钥。&lt;/p&gt;</summary><category term="SSH"></category><category term="ssh-agent"></category><category term="Linux"></category><category term="alias"></category></entry><entry><title>Ubuntu 12.04 x64系统下编译ffmpeg和mplayer全程记录</title><link href="http://yysfire.github.io/linux/building-ffmpeg-mplayer-on-ubuntu-12.04-x64.html" rel="alternate"></link><updated>2012-10-26T14:59:25+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-25:linux/building-ffmpeg-mplayer-on-ubuntu-12.04-x64.html</id><summary type="html">
&lt;h2 id="chroot"&gt;建立Chroot环境&lt;/h2&gt;
&lt;p&gt;关于什么是Chroot，请查阅参考资料。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install dchroot debootstrap
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir -p /var/chroot
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir -p /var/chroot/precise_amd64
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo vim /etc/schroot/chroot.d/precise_amd64.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;向文件precise_amd64.conf中写入&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;precise_amd64&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Ubuntu 12.04 Precise &lt;span class="k"&gt;for &lt;/span&gt;amd64/x64
&lt;span class="nv"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/chroot/precise_amd64
&lt;span class="nv"&gt;users&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_user_name
&lt;span class="nv"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;sbuild
root-groups&lt;span class="o"&gt;=&lt;/span&gt;root
run-setup-scripts&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
run-exec-scripts&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;然后运行以下命令：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo debootstrap --arch amd64 precise /var/chroot/precise_amd64 http://mirrors.tuna.tsinghua.edu.cn/ubuntu/
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /etc/apt/sources.list /var/chroot/precise_amd64/etc/apt/
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chroot /var/chroot/precise_amd64 &lt;span class="c"&gt;#进入chroot环境，它的"/"目录实际上是主系统的"/var/chroot/precise_amd64"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-get update
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_1"&gt;安装编译依赖包&lt;/h2&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;apt-get build-dep ffmpeg
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-get build-dep mplayer
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-get install libass-dev libfaac-dev libopencore-amrnb-dev libopencore-amrwb-dev librtmp-dev libtwolame-dev libvo-aacenc-dev libopenjpeg-dev liba52-0.7.4-dev libmpg123-dev libmad0-dev libdv4-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_2"&gt;下载源码&lt;/h2&gt;
&lt;p&gt;1) libnut(AMD64特殊需求）&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;home/
&lt;span class="nv"&gt;$ &lt;/span&gt;svn checkout svn://svn.mplayerhq.hu/nut/src/trunk libnut
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;2) Ffmpeg&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;3) Mplayer&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;svn checkout svn://svn.mplayerhq.hu/mplayer/trunk mplayer
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="libnut"&gt;编译libnut&lt;/h2&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;libnut
&lt;span class="nv"&gt;$ &lt;/span&gt;vim config.mak
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;把&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;CFLAGS +&lt;span class="o"&gt;=&lt;/span&gt; -Os -fomit-frame-pointer -g -Wall
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;改成&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;CFLAGS +&lt;span class="o"&gt;=&lt;/span&gt; -Os -fomit-frame-pointer -Wall -fPIC
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;保存，编译，安装&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make libnut
&lt;span class="nv"&gt;$ &lt;/span&gt;make install-libnut
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="ffmpeg"&gt;编译ffmpeg&lt;/h2&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ffmpeg
&lt;span class="nv"&gt;$ &lt;/span&gt;./configure --enable-nonfree --enable-gpl --enable-version3 &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-shared --enable-postproc --enable-libmp3lame &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-libopenjpeg --enable-libvorbis --enable-libopencore-amrnb &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-libopencore-amrwb --enable-libxvid --enable-libx264  &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-libfaac --enable-libass --enable-libbluray --enable-librtmp &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-libtwolame --enable-libpulse --enable-libvo-aacenc --enable-gnutls &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-pthreads --disable-debug --enable-libschroedinger &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-libspeex --enable-libtheora --enable-libvpx --enable-x11grab &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-libnut --disable-podpages --disable-htmlpages --disable-txtpages &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-libgsm
&lt;span class="nv"&gt;$ &lt;/span&gt;make -j2
&lt;span class="nv"&gt;$ &lt;/span&gt;checkinstall --pkgname&lt;span class="o"&gt;=&lt;/span&gt;ffmpeg --pkgversion&lt;span class="o"&gt;=&lt;/span&gt;1.0.git.&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d&lt;span class="sb"&gt;`&lt;/span&gt;.YYS &lt;span class="se"&gt;\&lt;/span&gt;
    --pkgarch&lt;span class="o"&gt;=&lt;/span&gt;amd64 --install&lt;span class="o"&gt;=&lt;/span&gt;no --nodoc make install-progs
&lt;span class="nv"&gt;$ &lt;/span&gt;checkinstall --pkgname&lt;span class="o"&gt;=&lt;/span&gt;ffmpeg-headers --pkgversion&lt;span class="o"&gt;=&lt;/span&gt;1.0.git.&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d&lt;span class="sb"&gt;`&lt;/span&gt;.YYS &lt;span class="se"&gt;\&lt;/span&gt;
    --pkgarch&lt;span class="o"&gt;=&lt;/span&gt;amd64 --install&lt;span class="o"&gt;=&lt;/span&gt;no --nodoc make install-headers
&lt;span class="nv"&gt;$ &lt;/span&gt;checkinstall --pkgname&lt;span class="o"&gt;=&lt;/span&gt;ffmpeg-data --pkgversion&lt;span class="o"&gt;=&lt;/span&gt;1.0.git.&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d&lt;span class="sb"&gt;`&lt;/span&gt;.YYS &lt;span class="se"&gt;\&lt;/span&gt;
    --pkgarch&lt;span class="o"&gt;=&lt;/span&gt;amd64 --install&lt;span class="o"&gt;=&lt;/span&gt;no --nodoc make install-data
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;得到三个deb包，其中，ffmpeg包是可执行文件和动静态库文件，ffmpeg-headers包是头文件，ffmpeg-data包是一些examples和转换视频和音频要用到的预设文件（ffmpeg presets）。&lt;/p&gt;
&lt;h2 id="mplayer"&gt;编译mplayer&lt;/h2&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ../mplayer
&lt;span class="nv"&gt;$ &lt;/span&gt;cp -rt ./ ../ffmpeg/
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;将mplayer/configure文件中的&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt; -e ffmpeg/.svn ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"You have an outdated FFmpeg SVN checkout in ffmpeg/, please (re)move or replace it"&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt; -e ffmpeg/mp_auto_pull ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; ! &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ffmpeg &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git checkout release/1.0&lt;span class="o"&gt;)&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; ! &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ffmpeg &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git pull --rebase --ff-only&lt;span class="o"&gt;)&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"git pull failed, (re)move ffmpeg/mp_auto_pull to disable pulling"&lt;/span&gt;
        &lt;span class="nb"&gt;exit &lt;/span&gt;1
    &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ffmpeg &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git checkout release/1.0&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; ! &lt;span class="nb"&gt;test&lt;/span&gt; -e ffmpeg ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"No FFmpeg checkout, press enter to download one with git or CTRL+C to abort"&lt;/span&gt;
    &lt;span class="nb"&gt;read &lt;/span&gt;tmp
    &lt;span class="k"&gt;if&lt;/span&gt; ! git clone --depth 1 git://source.ffmpeg.org/ffmpeg.git ffmpeg ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;rm -rf ffmpeg
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Failed to get a FFmpeg checkout"&lt;/span&gt;
        &lt;span class="nb"&gt;exit &lt;/span&gt;1
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;touch ffmpeg/mp_auto_pull
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;注释掉。&lt;/p&gt;
&lt;p&gt;新开一个终端，执行&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /proc/cpuinfo /var/chroot/precise_amd64/proc/
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;回到之前的终端&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./configure --enable-radio --enable-radio-capture --enable-menu --enable-xvmc &lt;span class="se"&gt;\&lt;/span&gt;
    --language&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"en zh_CN"&lt;/span&gt; --enable-runtime-cpudetection --enable-mga &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-3dfx --enable-tdfxfb --disable-jack
&lt;span class="nv"&gt;$ &lt;/span&gt;make -j2
&lt;span class="nv"&gt;$ &lt;/span&gt;checkinstall --pkgname&lt;span class="o"&gt;=&lt;/span&gt;mplayer --pkgversion&lt;span class="o"&gt;=&lt;/span&gt;35233.svn&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d&lt;span class="sb"&gt;`&lt;/span&gt;.YYS &lt;span class="se"&gt;\&lt;/span&gt;
    --pkgarch&lt;span class="o"&gt;=&lt;/span&gt;amd64 --install&lt;span class="o"&gt;=&lt;/span&gt;no --nodoc make install-mplayer
&lt;span class="nv"&gt;$ &lt;/span&gt;checkinstall --pkgname&lt;span class="o"&gt;=&lt;/span&gt;mencoder --pkgversion&lt;span class="o"&gt;=&lt;/span&gt;35233.svn&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y%m%d&lt;span class="sb"&gt;`&lt;/span&gt;.YYS &lt;span class="se"&gt;\&lt;/span&gt;
    --pkgarch&lt;span class="o"&gt;=&lt;/span&gt;amd64 --install&lt;span class="o"&gt;=&lt;/span&gt;no --nodoc make install-mencoder install-mencoder-man
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;得到两个deb包，其中，mplayer包是mplayer的可执行文件，mencoder包是mencoder的可执行文件和两者的man文档。&lt;/p&gt;
&lt;h2 id="_3"&gt;回到主系统安装&lt;/h2&gt;
&lt;p&gt;卸载之前安装的ffmpeg和mpalyer&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get purge ffmpeg mplayer mencoder
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果安装了smplayer，卸载mplayer时也会连同smplayer一起卸载掉。&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;dpkg -i deb包文件&lt;/code&gt;命令就可以安装之前生成的deb包。如果遇到有冲突的包，就把冲突的包卸掉，再安装。&lt;/p&gt;
&lt;p&gt;装完后，别忘了运行&lt;code&gt;sudo ldconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;装完自己生成的mplayer包之后，就可以重新安装smplayer了：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install smplayer
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;最后为了防止系统将自己的老旧包（新的也一样）替换掉我们辛辛苦苦编译的包，在新立得软件包管理器中分别搜索ffmpeg,mplayer,mencoder，选中它们，点击新立得菜单-&amp;gt;软件包-&amp;gt;锁定版本。&lt;/p&gt;
&lt;p&gt;也可以使用aptitude命令来锁定版本：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo aptitude hold ffmpeg mplayer mencoder
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_4"&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/BasicChroot"&gt;BasicChroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/DebootstrapChroot"&gt;DebootstrapChroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.winehq.org/WineOn64bit"&gt;Building 32-bit Wine on a 64-bit (x86-64) system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.ubuntu.org.cn/viewtopic.php?f=74&amp;amp;t=286315"&gt;Ubuntu x64版编译安装ffmpeg,mplayer,x264全教程【原创】支持VDPAU(高清硬解)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="ffmpeg"></category><category term="mplayer"></category><category term="Ubuntu"></category><category term="Linux"></category><category term="Chroot"></category></entry><entry><title>使用ssh和ssh-agent实现“无密码”登录远程机器</title><link href="http://yysfire.github.io/linux/using-ssh-agent-with-ssh.html" rel="alternate"></link><updated>2012-10-30T22:16:04+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-25:linux/using-ssh-agent-with-ssh.html</id><summary type="html">
&lt;p&gt;我们经常有从本地连接登录到远程机器的必要，例如，使用版本控制工具进行push操作时。每次push时都要求输入用户名和密码，这不仅不方便，也不安全。使用SSH密钥就可以轻松的解决这个问题。&lt;/p&gt;
&lt;h2 id="_1"&gt;本文目标&lt;/h2&gt;
&lt;p&gt;通过使用ssh和ssh-agent两种工具，加密安全地连接到远程机器，而又不用手工输入密码。&lt;/p&gt;
&lt;h2 id="_2"&gt;基本流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在本地机器上创建密钥对&lt;/li&gt;
&lt;li&gt;将公共密钥放到要连接的远程机器上&lt;/li&gt;
&lt;li&gt;使用ssh-agent来缓存解密的私有密钥，实现后续的“无密码”连接&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="_3"&gt;具体实现方法&lt;/h2&gt;
&lt;p&gt;以从基于Ubuntu系统的本地机器连接到GitHub.com为例进行说明。如果本地操作系统为Windows，请使用Cygwin或者msysgit。&lt;/p&gt;
&lt;h3 id="1"&gt;步骤1：检查本地是否已存在密钥对&lt;/h3&gt;
&lt;p&gt;打开终端，运行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果提示"No such file or directory"，就请直接跳到步骤3，否则继续步骤2.&lt;/p&gt;
&lt;h3 id="2"&gt;步骤2：备份和删除本地已存在密钥对&lt;/h3&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir key_backup
&lt;span class="nv"&gt;$ &lt;/span&gt;cp id_rsa* key_backup
&lt;span class="nv"&gt;$ &lt;/span&gt;rm id_rsa*
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="3"&gt;步骤3：生成新的密钥对&lt;/h3&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -t rsa -f ~/.ssh/github_rsa -C &lt;span class="s2"&gt;"github"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;&lt;code&gt;-t rsa&lt;/code&gt;表示密钥类型是rsa，&lt;code&gt;-C&lt;/code&gt;选项用于添加comment，可以设置成自己的Email地址。&lt;/p&gt;
&lt;p&gt;会提示你输入和确认密码。&lt;/p&gt;
&lt;p&gt;然后，私有密钥会保存在&lt;code&gt;/home/you/.ssh/github_rsa&lt;/code&gt;，公共密钥会保存在&lt;code&gt;/home/you/.ssh/github_rsa.pub&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;想修改密钥的解密密码，请使用以下命令：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -p
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;在 SSH 用户配置文件 ~/.ssh/config 中指定证书名称，如果没有 config 文件的话就新建一个 (Linux 平台的话需使用该命令 &lt;code&gt;chmod 644 ~/.ssh/config&lt;/code&gt; 来改变 config 文件权限)，并输入以下内容：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;Host github.com
    HostName github.com
    IdentityFile ~/.ssh/github_rsa
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="4github"&gt;步骤4：添加公共密钥到远程机器（GitHub）&lt;/h3&gt;
&lt;p&gt;运行以下命令，复制公共密钥到剪切板。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xclip
&lt;span class="nv"&gt;$ &lt;/span&gt;xclip -sel clip &amp;lt; ~/.ssh/github_rsa.pub
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;说明：复制密钥时，不能增加额外的空格和新行，因此这里借助了工具xclip&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后，按照以下步骤添加公共密钥到GitHub：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开github.com网站，登入自己的帐号&lt;/li&gt;
&lt;li&gt;进入“Account Settings”&lt;/li&gt;
&lt;li&gt;点击左边的“Add SSH key”&lt;/li&gt;
&lt;li&gt;将刚才复制的公共密钥内容粘贴到“Key”文本框&lt;/li&gt;
&lt;li&gt;点击“Add key”&lt;/li&gt;
&lt;li&gt;输入GitHub帐号密码，确认操作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你所要连接的远程机器支持shell登入，就可以运行以下命令来添加公共密钥：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat ~/.ssh/id_rsa.pub | ssh you@other-host &lt;span class="s1"&gt;'cat - &amp;gt;&amp;gt; ~/.ssh/authorized_keys'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Note：
1. 如果远程机器运行的是一个较旧版的ssh，你可能要使用&lt;code&gt;~/.ssh/authorized_keys2&lt;/code&gt;文件。
1. 如果远程机器运行的是Windows系统，你可能要用&lt;code&gt;"type"&lt;/code&gt;代替&lt;code&gt;"cat"&lt;/code&gt;，&lt;code&gt;"$HOME"&lt;/code&gt;代替&lt;code&gt;"~"&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id="5"&gt;步骤5：测试密钥工作是否正常&lt;/h3&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -T git@github.com
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;会提示你输入密钥密码，就是在步骤3里设置的密码。第一次你会看到以下警告：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;authenticity&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;207.97.227.239&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;established&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;RSA&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;fingerprint&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;a5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;eb&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;a6&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;48.&lt;/span&gt;
&lt;span class="n"&gt;Are&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt; &lt;span class="n"&gt;connecting&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;输入“yes”，回车。如果看到以下消息，且“username”是正确的，就说明密钥已设置成功。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Hi&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;You&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;ve&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt; &lt;span class="n"&gt;authenticated&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt;
&lt;span class="n"&gt;provide&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="6ssh-agent"&gt;步骤6：运行ssh-agent&lt;/h3&gt;
&lt;p&gt;大多数linux发行版，在登入系统时便会自动启动一个ssh-agent进程。如果你的系统没有这个功能，请在&lt;code&gt;~/.xsession&lt;/code&gt;文件中加入：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;ssh-agent gnome-session
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Note：请使用你自己的窗口管理器取代&lt;code&gt;gnome-session&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;查看ssh-agent是否在运行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ps -e | grep ssh-agent
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;但是，如果你使用的是Cygwin或者msysgit环境，请将以下代码添加进你的&lt;code&gt;~/.profile&lt;/code&gt;或者&lt;code&gt;~/.bashrc&lt;/code&gt;或者&lt;code&gt;~/.bash_profile&lt;/code&gt;中。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;SSH_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"$HOME/.ssh/environment"&lt;/span&gt;

&lt;span class="c"&gt;# start the ssh-agent&lt;/span&gt;
&lt;span class="k"&gt;function &lt;/span&gt;start_agent &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Initializing new SSH agent..."&lt;/span&gt;
    &lt;span class="c"&gt;# spawn ssh-agent&lt;/span&gt;
    ssh-agent | sed &lt;span class="s1"&gt;'s/^echo/#echo/'&lt;/span&gt; &amp;gt; &lt;span class="s2"&gt;"$SSH_ENV"&lt;/span&gt;
    &lt;span class="nb"&gt;echo &lt;/span&gt;succeeded
    chmod 600 &lt;span class="s2"&gt;"$SSH_ENV"&lt;/span&gt;
    . &lt;span class="s2"&gt;"$SSH_ENV"&lt;/span&gt; &amp;gt; /dev/null
    ssh-add
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# test for identities&lt;/span&gt;
&lt;span class="k"&gt;function &lt;/span&gt;test_identities &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;# test whether standard identities have been added to the agent already&lt;/span&gt;
    ssh-add -l | grep &lt;span class="s2"&gt;"The agent has no identities"&lt;/span&gt; &amp;gt; /dev/null
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq 0 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;ssh-add
        &lt;span class="c"&gt;# $SSH_AUTH_SOCK broken so we start a new proper agent&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq 2 &lt;span class="o"&gt;]&lt;/span&gt;;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;            &lt;/span&gt;start_agent
        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# check for running ssh-agent with proper $SSH_AGENT_PID&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;"$SSH_AGENT_PID"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;ps -ef | grep &lt;span class="s2"&gt;"$SSH_AGENT_PID"&lt;/span&gt; | grep ssh-agent &amp;gt; /dev/null
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq 0 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;test_identities
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="c"&gt;# if $SSH_AGENT_PID is not properly set, we might be able to load one from&lt;/span&gt;
&lt;span class="c"&gt;# $SSH_ENV&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="s2"&gt;"$SSH_ENV"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
        . &lt;span class="s2"&gt;"$SSH_ENV"&lt;/span&gt; &amp;gt; /dev/null
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;ps -ef | grep &lt;span class="s2"&gt;"$SSH_AGENT_PID"&lt;/span&gt; | grep ssh-agent &amp;gt; /dev/null
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq 0 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;test_identities
    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;start_agent
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这样，你每次启动Cygwin或者msysgit的shell时，都会自动运行ssh-agent，并添加私有密钥，提示你输入私有密钥的解密密码，然后你可以跳过步骤7了。&lt;/p&gt;
&lt;h3 id="7ssh-agent"&gt;步骤7：将私有密钥添加到ssh-agent的缓存中&lt;/h3&gt;
&lt;p&gt;运行以下命令：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-add ~/.ssh/github_rsa
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;会提示你输入私有密钥的解密密码（步骤3中设置的密码）&lt;/p&gt;
&lt;p&gt;查看ssh-agent正在管理的密钥：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-add -l
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="8ssh-agent"&gt;步骤8：测试ssh-agent&lt;/h3&gt;
&lt;p&gt;再次连接GitHub：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -T git@github.com
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;不会再让你输入密码了。你再进行多少次git push操作，都不会要你输入密码了。爽吧：）&lt;/p&gt;
&lt;h3 id="9repo"&gt;步骤9：更改repo的协议&lt;/h3&gt;
&lt;p&gt;要使用ssh-agent，就要求repo使用的协议是ssh，而不是https。查看repo所使用的协议：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;repositoryformatversion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;filemode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;bare&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
    &lt;span class="n"&gt;logallrefupdates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt; &lt;span class="s"&gt;"origin"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/yys294/vimfiles.git&lt;/span&gt;
    &lt;span class="n"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;refs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;heads&lt;/span&gt;&lt;span class="o"&gt;/*:&lt;/span&gt;&lt;span class="n"&gt;refs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;remotes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;credential&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;helper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;将url的值改为ssh协议的模式即可&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;[remote "origin"]&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;git@github.com:yys294/vimfiles.git&lt;/span&gt;
&lt;span class="s"&gt;    fetch = +refs/heads/*:refs/remotes/origin/*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_4"&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/generating-ssh-keys"&gt;Generating SSH Keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mah.everybody.org/docs/ssh"&gt;Using ssh-agent with ssh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/working-with-ssh-key-passphrases#platform-windows"&gt;Working with SSH key passphrases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/pages/viewpage.action?pageId=270827678"&gt;Set up SSH for Git and Mercurial on Mac OSX/Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="SSH"></category><category term="ssh-agent"></category><category term="Linux"></category><category term="git"></category></entry><entry><title>sed用法举例(2)—非负整数加一</title><link href="http://yysfire.github.io/linux/sed-example-non-negative-integer-plus-one.html" rel="alternate"></link><updated>2012-10-25T18:16:59+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-25:linux/sed-example-non-negative-integer-plus-one.html</id><summary type="html">
&lt;p&gt;众所周知，对非负整数加一，就是让个位数加一，即用个位数的下一个数字来取代它。唯一的例外就是，当个位数为9时，加一后变为0，而它的前一个数位上的数字也得加一，依次类推。&lt;/p&gt;
&lt;p&gt;以下脚本就利用 sed 命令实现了对非负整数加一的操作。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sed -f&lt;/span&gt;

/&lt;span class="o"&gt;[&lt;/span&gt;^0-9&lt;span class="o"&gt;]&lt;/span&gt;/ d

&lt;span class="c"&gt;# replace all trailing 9 by _ (any other character except digits, could&lt;/span&gt;
&lt;span class="c"&gt;# be used)&lt;/span&gt;
:d
s/9&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;_&lt;span class="se"&gt;\1&lt;/span&gt;/
td

&lt;span class="c"&gt;# increase last digit only.  The first line adds a most-significant&lt;/span&gt;
&lt;span class="c"&gt;# digit of 1 if we have to add a digit.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# The `tn' commands are not necessary, but make the thing&lt;/span&gt;
&lt;span class="c"&gt;# faster&lt;/span&gt;

s/^&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;1&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/8&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;9&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/7&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;8&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/6&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;7&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/5&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;6&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/4&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;5&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/3&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;4&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/2&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;3&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/1&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;2&lt;span class="se"&gt;\1&lt;/span&gt;/; tn
s/0&lt;span class="se"&gt;\(&lt;/span&gt;_*&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="nv"&gt;$/&lt;/span&gt;1&lt;span class="se"&gt;\1&lt;/span&gt;/; tn

:n
y/_/0/
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;此脚本首先忽略掉包含非数字字符的行，然后把数字末尾的9全部替换成下划线，再通过一系列的替换命令对数字进行加一，最后，把结果中的下划线替换成0.&lt;/p&gt;</summary><category term="sed"></category><category term="Linux"></category><category term="Regexp"></category></entry><entry><title>sed用法举例(1)—行居中</title><link href="http://yysfire.github.io/linux/sed-example-center-line.html" rel="alternate"></link><updated>2012-10-25T18:36:27+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-25:linux/sed-example-center-line.html</id><summary type="html">
&lt;p&gt;有一个文本文件，每行（除去行首和行末的空白）的长度都不超过80个字符，例如 Vim 的帮助文档。现在想将此文件的每一行都居中显示，宽度为80个字符。可以用以下 sed 脚本实现。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sed -f&lt;/span&gt;

&lt;span class="c"&gt;# Put 80 spaces in the hold space&lt;/span&gt;
1 &lt;span class="o"&gt;{&lt;/span&gt;
  x
  s/^&lt;span class="nv"&gt;$/&lt;/span&gt;          /
  s/^.*&lt;span class="nv"&gt;$/&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&lt;/span&gt;/
  x
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# del leading and trailing spaces&lt;/span&gt;
y/&lt;span class="se"&gt;\t&lt;/span&gt;/ /
s/^ *//
s/ *&lt;span class="nv"&gt;$/&lt;/span&gt;/

&lt;span class="c"&gt;# add a newline and 80 spaces to end of line&lt;/span&gt;
G

&lt;span class="c"&gt;# keep first 81 chars (80 + a newline)&lt;/span&gt;
s/^&lt;span class="se"&gt;\(&lt;/span&gt;.&lt;span class="se"&gt;\{&lt;/span&gt;81&lt;span class="se"&gt;\}\)&lt;/span&gt;.*&lt;span class="nv"&gt;$/&lt;/span&gt;&lt;span class="se"&gt;\1&lt;/span&gt;/

&lt;span class="c"&gt;# \2 matches half of the spaces, which are moved to the beginning&lt;/span&gt;
s/^&lt;span class="se"&gt;\(&lt;/span&gt;.*&lt;span class="se"&gt;\)\n\(&lt;/span&gt;.*&lt;span class="se"&gt;\)\2&lt;/span&gt;/&lt;span class="se"&gt;\2\1&lt;/span&gt;/
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="sed"></category><category term="Linux"></category><category term="Regexp"></category></entry><entry><title>sed命令用法小结</title><link href="http://yysfire.github.io/linux/sed-usage-summary.html" rel="alternate"></link><updated>2012-11-30T07:33:40+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-25:linux/sed-usage-summary.html</id><summary type="html">
&lt;p&gt;&lt;em&gt;本文的介绍基于 GNU sed ，它对 POSIX sed 进行了一些扩展。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sed 是一个流编辑器。它是基于行的，按顺序对每一行执行命令，然后，将其结果写入标准输出 (stdout)。&lt;/p&gt;
&lt;h2 id="sed"&gt;sed 的工作原理&lt;/h2&gt;
&lt;p&gt;sed 维护着两个数据缓存区：模式空间和保留空间。两者均被初始化为空。&lt;/p&gt;
&lt;p&gt;sed 对输入的每一行运行一次如下所述的执行周期：首先，sed 从输入流中读入一行，并删除行末的换行符，将此行的内容放入模式空间。然后，脚本里的命令被执行；可以对每一个命令指定地址（地址相当于一种条件，只有条件被满足，才会执行紧跟其后的命令。当到达脚本的结尾，模式空间的内容（如果之前行末的换行符被删除，此时会被加回来）被写入到输出流（除非使用了选项'-n'）。然后，对下一行开始下一个执行周期。&lt;/p&gt;
&lt;p&gt;除非使用了命令'D'，否则，在两次执行周期之间，模式空间的内容是被删除的。相反，保留空间的内容在两次执行周期之间是被保持的。&lt;/p&gt;
&lt;h2 id="sed_1"&gt;sed 的基本用法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;sed的基本用法&lt;/strong&gt; ：&lt;code&gt;sed [选项]... {脚本} [输入文件]...&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="sed_2"&gt;sed的常用选项&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-n, --quiet, --silent&lt;/td&gt;
&lt;td&gt;默认情况下，sed在每个执行周期结束时打印出模式空间，此选项禁用此功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-e 脚本, --expression=脚本&lt;/td&gt;
&lt;td&gt;添加“脚本”到程序的运行列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-f 脚本文件, --file=脚本文件&lt;/td&gt;
&lt;td&gt;添加“脚本文件”的内容到程序的运行列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-i[扩展名], --in-place[=扩展名]&lt;/td&gt;
&lt;td&gt;直接修改文件(如果指定扩展名就备份文件)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--posix&lt;/td&gt;
&lt;td&gt;关闭所有 GNU 扩展&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r, --regexp-extended&lt;/td&gt;
&lt;td&gt;在脚本中使用扩展正则表达式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-s, --separate&lt;/td&gt;
&lt;td&gt;将所有输入文件看成是独立的输入流，而非单个长输入流&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果没有 -e, --expression, -f 或 --file 选项，那么第一个非选项参数被视为sed脚本。其他非选项参数被视为输入文件，如果没有输入文件，或者输入文件是'-'，那么程序将从标准输入读取数据。&lt;/p&gt;
&lt;h3 id="sed_3"&gt;sed的常用编辑命令&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;退出sed，此命令不接受地址范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;删除模式空间，立即进入下一个执行周期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;删除模式空间的内容直到遇到第一个换行符，若模式空间非空，则对剩余内容重新运行一次执行周期(不读入新行)，否则，进入下一个执行周期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;打印模式空间，常和选项"-n"联合使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;打印模式空间的内容直到遇到第一个换行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;若没有用'-n'选项，则打印模式空间的内容，然后将下一行读入并替换掉模式空间，若输入已结束则直接退出sed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;添加一个换行符到模式空间，然后将下一行附加到模式空间，若输入已结束则直接退出sed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s///&lt;/td&gt;
&lt;td&gt;对模式空间的内容执行替换操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;将保留空间的内容覆盖到模式空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;添加一个换行符到模式空间，然后将保留空间的内容附加到模式空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;将模式空间的内容覆盖到保留空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;添加一个换行符到保留空间，然后将模式空间的内容附加到保留空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;交换保留空间和模式空间的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;打印行号（带一个换行符），在 GNU 扩展下接受地址范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r FILENAME&lt;/td&gt;
&lt;td&gt;在当前执行周期结束时将文件的内容插入到输出流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w FILENAME&lt;/td&gt;
&lt;td&gt;将模式空间的内容写入到文件中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;: LABEL&lt;/td&gt;
&lt;td&gt;指定一个标签。不接受任何地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b LABEL&lt;/td&gt;
&lt;td&gt;无条件跳转到标签 LABEL。若 LABEL 省略，则开始下一个执行周期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t LABEL&lt;/td&gt;
&lt;td&gt;若成功完成了一次&lt;code&gt;s///&lt;/code&gt;命令，或者是最后一个&lt;code&gt;t&lt;/code&gt;命令，则跳转到标签 LABEL。若 LABEL 省略，则开始下一个执行周期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;z&lt;/td&gt;
&lt;td&gt;清空模式空间。在模式空间有多字节编码的情况下，此命令比 's/.*//' 更有效。(GNU 扩展)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_1"&gt;地址与地址范围&lt;/h3&gt;
&lt;p&gt;sed 可以对每一个编辑命令指定一个操作地址或地址范围。地址可以是以下形式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;地址形式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;正整数&lt;/td&gt;
&lt;td&gt;指定行号。sed 会对所有输入文件的行进行连续计数，除非使用了'-s'或'-i'选项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;起始行号~步长&lt;/td&gt;
&lt;td&gt;行号满足公式“起始行号+N×步长”（N为非负整数）的行被匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;匹配最后一个输入文件的最后一行。如果指定了'-s'或'-i'选项，就匹配每个输入文件的最后一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/REGEXP/&lt;/td&gt;
&lt;td&gt;选择匹配正则表达式 REGEXP 的所有行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\%REGEXP%&lt;/td&gt;
&lt;td&gt;'%'可换成任何单个字符。作用同上，不过,允许使用除'/'之外的其它字符作为正则表达式的分隔符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/REGEXP/I&lt;/td&gt;
&lt;td&gt;'I'标志表示匹配正则表达式时忽略大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;地址范围由起始地址和结束地址加一个逗号（,）分隔所组成。地址范围所指定的行，从匹配起始地址的行开始，一直到匹配结束地址的行为止（包含起始行和结束行）。如果没有行能够匹配结束地址，那么就一直指定到输入文件的末尾。&lt;/p&gt;
&lt;p&gt;如果结束地址是一个正则表达式，那么会从起始行的下一行开始寻找匹配结束地址的行。&lt;/p&gt;
&lt;p&gt;如果结束地址是一个不大于起始地址的行号，那么就只有起始行被指定。&lt;/p&gt;
&lt;p&gt;GNU sed 也支持以下几种特殊形式的地址范围：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特殊地址范围形式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0,/REGEXP/&lt;/td&gt;
&lt;td&gt;sed 会尝试从第一行开始匹配REGEXP，而'1,/REGEXP/'是从第二行开始匹配REGEXP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;addr1,+N&lt;/td&gt;
&lt;td&gt;匹配地址addr1和它下面的N行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;addr1,~N&lt;/td&gt;
&lt;td&gt;匹配地址addr1和它下面的行，直到行号是N的倍数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;地址（或地址范围）位于编辑命令的左边。如果在它们中间加一个感叹号（!），就表示对地址（或地址范围）指定行之外的其它行执行编辑命令。&lt;/p&gt;
&lt;h2 id="sed_4"&gt;用于 sed 的正则表达式&lt;/h2&gt;
&lt;p&gt;sed 正则表达式中使用的特殊字符：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;与行首匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;与行尾匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;与任一个字符匹配，包括换行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;与前一个字符的零或多个出现匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;与前一个字符的一或多个出现匹配（GNU 扩展）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\?&lt;/td&gt;
&lt;td&gt;与前一个字符的零或一个出现匹配（GNU 扩展）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{I}&lt;/td&gt;
&lt;td&gt;与前一个字符的I个出现匹配，I是0～255的整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{I,J}&lt;/td&gt;
&lt;td&gt;与前一个字符的I~J个出现匹配，I是0～255的整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{I,}&lt;/td&gt;
&lt;td&gt;与前一个字符的I个或多于I个出现匹配，I是0～255的整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[字符列表]&lt;/td&gt;
&lt;td&gt;与'字符列表'之内的单个字符匹配，可用"-"来指定字符范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^字符列表]&lt;/td&gt;
&lt;td&gt;与非'字符列表'之内的单个字符匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(REGEXP)&lt;/td&gt;
&lt;td&gt;对匹配正则表达式REGEXP的部分分组，用于后向引用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\DIGIT&lt;/td&gt;
&lt;td&gt;引用分组号为DIGIT的子串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;sed 正则表达式中的特殊字符列表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符列表&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;[:alnum:]&lt;/td&gt;
&lt;td&gt;字母数字 [a-zA-Z0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:alpha:]&lt;/td&gt;
&lt;td&gt;字母 [a-zA-Z]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:blank:]&lt;/td&gt;
&lt;td&gt;空格或制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:cntrl:]&lt;/td&gt;
&lt;td&gt;任何控制字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:digit:]&lt;/td&gt;
&lt;td&gt;数字 [0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:graph:]&lt;/td&gt;
&lt;td&gt;任何可视字符（无空格）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:lower:]&lt;/td&gt;
&lt;td&gt;小写 [a-z]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:print:]&lt;/td&gt;
&lt;td&gt;非控制字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:punct:]&lt;/td&gt;
&lt;td&gt;标点字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:space:]&lt;/td&gt;
&lt;td&gt;空格或制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:upper:]&lt;/td&gt;
&lt;td&gt;大写 [A-Z]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[:xdigit:]&lt;/td&gt;
&lt;td&gt;十六进制数字 [0-9a-fA-F]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;sed 正则表达式中常用的转义字符：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;转义字符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;匹配任何 "word" 字符，即字母、数字和下划线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;匹配 "non-word"字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;匹配单词边界，即 "word" 字符和 "non-word" 字符之间的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\B&lt;/td&gt;
&lt;td&gt;匹配除单词边界以外的任何地方，即两个 "word" 字符之间，或者两个 "non-word" 字符之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\'&lt;/td&gt;
&lt;td&gt;匹配模式空间的结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;td&gt;匹配模式空间的开始&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下面是几个示例：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;正则表达式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;将与包含至少一个字符的字符串匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;td&gt;将与包含至少两个字符的字符串匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.**&lt;/td&gt;
&lt;td&gt;将与任何字符串匹配，包括空串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^#&lt;/td&gt;
&lt;td&gt;将与以 '#' 开始的任何字符串匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^$&lt;/td&gt;
&lt;td&gt;将与所有空行匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;}$&lt;/td&gt;
&lt;td&gt;将与以 '}'（无空格）结束的任何行匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;} **$&lt;/td&gt;
&lt;td&gt;将与以 '}' 后面跟有零或多个空格结束的任何行匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\$&lt;/td&gt;
&lt;td&gt;将与以反斜杠（\）结尾的字符串匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\$&lt;/td&gt;
&lt;td&gt;将与包含美元符号的字符串匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^[abc]&lt;/td&gt;
&lt;td&gt;将与以 'a'、'b' 或 'c' 开始的任何行匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^[:space:]]+&lt;/td&gt;
&lt;td&gt;将与一个或多个非空格和制表符的字符组成的字符串匹配，通常匹配一个词语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^(.*)\n\1$&lt;/td&gt;
&lt;td&gt;将与由换行符分隔的两个相同子串组成的字符串匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="cmain"&gt;打印C源代码中main函数示例&lt;/h3&gt;
&lt;p&gt;如果只要打印 C 源文件中的 main() 函数，可输入：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sed -n -e &lt;span class="s1"&gt;'/main[[:space:]]*(/,/^}/p'&lt;/span&gt; sourcefile.c | more
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;该命令有两个规则表达式 &lt;code&gt;/main[[:space:]]*(/&lt;/code&gt; 和 &lt;code&gt;/^}/&lt;/code&gt;，以及一个命令 'p'。第一个规则表达式将与后面依次跟有任意数量的空格或制表键以及开始圆括号的字符串 "main" 匹配。这应该与一般 ANSI C main() 声明的开始匹配。&lt;/p&gt;
&lt;p&gt;在这个特别的规则表达式中，出现了 &lt;code&gt;[:space:]&lt;/code&gt; 字符类。这只是一个特殊的关键字，它告诉 sed 与 TAB 或空格匹配。如果愿意的话，可以不输入 &lt;code&gt;[:space:]&lt;/code&gt;，而输入 '['，然后是空格字母，然后是 Ctrl-V，然后再输入制表键字母和 ']' 。Ctrl-V 告诉 bash 要插入“真正”的制表键，而不是执行命令扩展。使用 &lt;code&gt;[:space:]&lt;/code&gt; 字符类（特别是在脚本中）会更清楚。&lt;/p&gt;
&lt;p&gt;好，现在看一下第二个 regexp。&lt;code&gt;/^}/&lt;/code&gt; 将与任何出现在新行行首的 '}' 字符匹配。如果代码的格式很好，那么这将与 main() 函数的结束花括号匹配。如果格式不好，则不会正确匹配。&lt;/p&gt;
&lt;p&gt;因为是处于 '-n' 安静方式，所以 'p' 命令还是完成其惯有任务，即明确告诉 sed 打印该行。试着对 C 源文件运行该命令，它应该输出整个 main() { } 块，包括开始的 "main()" 和结束的 '}'。&lt;/p&gt;
&lt;h2 id="sed-s"&gt;sed 的替换命令 &lt;code&gt;s///&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;替换命令的完整语法应该是 &lt;code&gt;s/REGEXP/REPLACEMENT/FLAGS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关于 &lt;code&gt;s///&lt;/code&gt; 命令的一个妙处是 '/' 分隔符有许多替换选项。如果正在执行字符串替换，并且正则表达式或替换字符串中有许多斜杠，则可以通过在 's' 之后指定一个不同的字符来更改分隔符。例如，下例将把所有出现的 /usr/local 替换成 /usr：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sed -e &lt;span class="s1"&gt;'s:/usr/local:/usr:g'&lt;/span&gt; mylist.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;在该例中，使用冒号作为分隔符。如果需要在正则表达式中指定分隔符字符，可以在它前面加入反斜杠（\）进行转义。&lt;/p&gt;
&lt;p&gt;GNU 扩展下，REPLACEMENT 可以包含以下几个特殊的标记：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标记&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\L&lt;/td&gt;
&lt;td&gt;将 replacement 转换为小写，直到遇到'\U'或者'\E'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\l&lt;/td&gt;
&lt;td&gt;将下一个字符转换为小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\U&lt;/td&gt;
&lt;td&gt;将 replacement 转换为大写，直到遇到'\L'或者'\E'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\u&lt;/td&gt;
&lt;td&gt;将下一个字符转换为大写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\E&lt;/td&gt;
&lt;td&gt;终止由'\U'或'\L'开始的大小写转换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在替换命令中，'FLAGS' 是可选的。常用的 FLAGS 有以下几个：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;FLAGS&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;全局替换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NUMBER&lt;/td&gt;
&lt;td&gt;只替换第 NUMBER 个匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;替换操作完成后打印新的模式空间内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i 或 I&lt;/td&gt;
&lt;td&gt;匹配 REGEXP 时忽略大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w FILENAME&lt;/td&gt;
&lt;td&gt;替换完成后，将结果写入到文件中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_2"&gt;高级替换功能&lt;/h2&gt;
&lt;p&gt;我们已经看到如何执行简单甚至有些复杂的直接替换，但是 sed 还可以做更多的事。实际上可以引用匹配正则表达式的部分或全部，并使用这些部分来构造替换字符串。作为示例，假设您正在回复一条消息。下例将在每一行前面加上短语 "ralph said: "：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sed -e &lt;span class="s1"&gt;'s/.*/ralph said: &amp;amp;/'&lt;/span&gt; origmsg.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;输出如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ralph&lt;/span&gt; &lt;span class="n"&gt;said&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hiya&lt;/span&gt; &lt;span class="n"&gt;Jim&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;ralph&lt;/span&gt; &lt;span class="n"&gt;said&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;ralph&lt;/span&gt; &lt;span class="n"&gt;said&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; &lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;sed&lt;/span&gt; &lt;span class="n"&gt;stuff&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;ralph&lt;/span&gt; &lt;span class="n"&gt;said&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;该例的替换字符串中使用了 '&amp;amp;' 字符，该字符告诉 sed 插入匹配正则表达式的整个部分。因此，可以将与 '.*' 匹配的任何内容（行中的零或多个字符的最大组或整行）插入到替换字符串中的任何位置，甚至多次插入。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s///&lt;/code&gt; 命令还允许我们在规则表达式中定义区域，然后可以在替换字符串中引用这些特定区域。作为示例，假设有一个包含以下文本的文件：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="n"&gt;oni&lt;/span&gt;
&lt;span class="n"&gt;eeny&lt;/span&gt; &lt;span class="n"&gt;meeny&lt;/span&gt; &lt;span class="n"&gt;miny&lt;/span&gt;
&lt;span class="n"&gt;larry&lt;/span&gt; &lt;span class="n"&gt;curly&lt;/span&gt; &lt;span class="n"&gt;moe&lt;/span&gt;
&lt;span class="n"&gt;jimmy&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;weasel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;现在假设要编写一个 sed 脚本，该脚本将把 "eeny meeny miny" 替换成 "Victor eeny-meeny Von miny" 等等。要这样做，首先要编写一个由空格分隔并与三个字符串匹配的规则表达式。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="s1"&gt;'.* .* .*'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;现在，将在其中每个感兴趣的区域两边插入带反斜杠的圆括号来定义区域：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="s1"&gt;'\(.*\) \(.*\) \(.*\)'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;除了要定义三个可在替换字符串中引用的逻辑区域以外，该规则表达式的工作原理将与第一个规则表达式相同。下面是最终脚本：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sed -e &lt;span class="s1"&gt;'s/\(.*\) \(.*\) \(.*\)/Victor \1-\2 Von \3/'&lt;/span&gt; myfile.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如您所见，通过输入 '\x'（其中，x 是从 1 开始的区域号）来引用每个由圆括号定界的区域。输出如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Victor&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="n"&gt;Von&lt;/span&gt; &lt;span class="n"&gt;oni&lt;/span&gt;
&lt;span class="n"&gt;Victor&lt;/span&gt; &lt;span class="n"&gt;eeny&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;meeny&lt;/span&gt; &lt;span class="n"&gt;Von&lt;/span&gt; &lt;span class="n"&gt;miny&lt;/span&gt;
&lt;span class="n"&gt;Victor&lt;/span&gt; &lt;span class="n"&gt;larry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;curly&lt;/span&gt; &lt;span class="n"&gt;Von&lt;/span&gt; &lt;span class="n"&gt;moe&lt;/span&gt;
&lt;span class="n"&gt;Victor&lt;/span&gt; &lt;span class="n"&gt;jimmy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Von&lt;/span&gt; &lt;span class="n"&gt;weasel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_3"&gt;命令的组合使用&lt;/h2&gt;
&lt;p&gt;在开始创建更复杂的 sed 脚本时，需要有输入多个命令的能力。有几种方法这样做。首先，可以在命令之间使用分号。例如，以下命令系列使用 '=' 命令和 'p' 命令，'=' 命令告诉 sed 打印行号，'p' 命令明确告诉 sed 打印该行（因为处于 '-n' 模式）。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sed -n -e &lt;span class="s1"&gt;'=;p'&lt;/span&gt; myfile.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;无论什么时候指定了两个或更多命令，都按顺序将每个命令应用到文件的每一行。在上例中，首先将 '=' 命令应用到第 1 行，然后应用 'p' 命令。接着，sed 继续处理第 2 行，并重复该过程。虽然分号很方便，但是在某些场合下，它不能正常工作。另一种替换方法是使用两个 -e 选项来指定两个不同的命令：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sed -n -e &lt;span class="s1"&gt;'='&lt;/span&gt; -e &lt;span class="s1"&gt;'p'&lt;/span&gt; myfile.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;然而，在使用更为复杂的附加和插入命令时，甚至多个 '-e' 选项也不能帮我们的忙。对于复杂的多行脚本，最好的方法是将命令放入一个单独的文件中。然后，用 -f 选项引用该脚本文件：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sed -n -f mycommands.sed myfile.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这种方法虽然可能不太方便，但总是管用。&lt;/p&gt;
&lt;h2 id="_4"&gt;一个地址的多个命令&lt;/h2&gt;
&lt;p&gt;有时，可能要指定应用到一个地址的多个命令。这在执行许多 &lt;code&gt;s///&lt;/code&gt; 以变换源文件中的字和语法时特别方便。要对一个地址执行多个命令，可在文件中输入 sed 命令，然后使用 '{}' 字符将这些命令分组，如下所示：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;1,20&lt;span class="o"&gt;{&lt;/span&gt;
    s/&lt;span class="o"&gt;[&lt;/span&gt;Ll&lt;span class="o"&gt;]&lt;/span&gt;inux/GNU&lt;span class="se"&gt;\/&lt;/span&gt;Linux/g
    s/samba/Samba/g
    s/posix/POSIX/g
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;上例将把三个替换命令应用到第 1 行到第 20 行（包括这两行）。还可以使用规则表达式地址或者二者的组合：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;1,/^END/&lt;span class="o"&gt;{&lt;/span&gt;
    s/&lt;span class="o"&gt;[&lt;/span&gt;Ll&lt;span class="o"&gt;]&lt;/span&gt;inux/GNU&lt;span class="se"&gt;\/&lt;/span&gt;Linux/g
    s/samba/Samba/g
    s/posix/POSIX/g
    p
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;该例将把 '{ }' 之间的所有命令应用到从第1行开始，到以字母"END"开始的行结束（如果在源文件中没发现"END"，则到文件结束）的所有行。&lt;/p&gt;
&lt;h2 id="_5"&gt;附加、插入和更改行&lt;/h2&gt;
&lt;p&gt;既然在单独的文件中编写 sed 脚本，我们可以利用附加、插入和更改行命令。这些命令将在当前行之后插入一行，在当前行之前插入一行，或者替换模式空间中的当前行。它们也可以用来将多行插入到输出。插入行命令用法如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;i&lt;span class="se"&gt;\&lt;/span&gt;
This line will be inserted before each line
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果不为该命令指定地址，那么它将应用到每一行，并产生如下的输出：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;inserted&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;inserted&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;inserted&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;inserted&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果要在当前行之前插入多行，可以通过在前一行之后附加一个反斜杠来添加附加行，如下所示：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;i&lt;span class="se"&gt;\&lt;/span&gt;
insert this line&lt;span class="se"&gt;\&lt;/span&gt;
and this one&lt;span class="se"&gt;\&lt;/span&gt;
and this one&lt;span class="se"&gt;\&lt;/span&gt;
and, uh, this one too.
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;附加命令的用法与之类似，但是它将把一行或多行插入到模式空间中的当前行之后。其用法如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;a&lt;span class="se"&gt;\&lt;/span&gt;
insert this line after each line.  Thanks!
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;另一方面，更改行命令将替换模式空间中的当前行，其用法如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;c&lt;span class="se"&gt;\&lt;/span&gt;
You&lt;span class="err"&gt;'&lt;/span&gt;re &lt;span class="nb"&gt;history&lt;/span&gt;, original line! Muhahaha!
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;因为附加、插入和更改行命令需要在多行输入，所以将把它们输入到一个文本 sed 脚本中，然后通过使用 '-f' 选项告诉 sed 执行它们。使用其它方法将命令传递给 sed 会出现问题。&lt;/p&gt;</summary><category term="sed"></category><category term="Linux"></category><category term="Regexp"></category></entry><entry><title>Linux命令行实现代理连接上网</title><link href="http://yysfire.github.io/linux/shell-proxy.html" rel="alternate"></link><updated>2012-10-07T19:56:57+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-07:linux/shell-proxy.html</id><summary type="html">
&lt;p&gt;在&lt;code&gt;profile&lt;/code&gt;文件或者&lt;code&gt;.bashrc&lt;/code&gt;中设置相关环境变量即可。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vim ~/.bashrc
&lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yourproxyaddress:proxyport   &lt;span class="c"&gt;#分别指定http、https、ftp协议使用的代理服务器地址&lt;/span&gt;
&lt;span class="nv"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yourproxyaddress:proxyport
&lt;span class="nv"&gt;ftp_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yourproxyaddress:proxyport
&lt;span class="nv"&gt;no_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;192.168.10.0. &lt;span class="c"&gt;#访问局域网地址（192.168.20.0/24网段）时不使用代理，可以用逗号分隔多个地址&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;http_proxy https_proxy ftp_proxy no_proxy
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="Linux"></category><category term="proxy"></category></entry><entry><title>解决NetworkManager大幅占用CPU的问题</title><link href="http://yysfire.github.io/linux/networkmanager-occupy-cpu-substantially.html" rel="alternate"></link><updated>2012-10-07T19:47:16+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-07:linux/networkmanager-occupy-cpu-substantially.html</id><summary type="html">
&lt;p&gt;系统环境：台式机，Ubuntu 12.04 64位桌面版，网卡eth0闲置，平时使用网卡eth1.&lt;/p&gt;
&lt;p&gt;网络环境：通过DHCP动态获取ipv4地址，自动获取ipv6地址。&lt;/p&gt;
&lt;p&gt;每次打开Transmission通过ipv6下载PT时，进程network-manager的CPU占用率都会飙到百分之九十多。&lt;/p&gt;
&lt;p&gt;我的解决方法就是：放弃采用NetworkManager来管理网络设置，而使用传统的&lt;code&gt;/etc/network/interfaces&lt;/code&gt;文件来管理网络设置。实际上，服务器版的Linux系统都是采用这种方式的，NetworkManager只有桌面版的Ubuntu系统才有。&lt;/p&gt;
&lt;h2 id="networkmanager"&gt;第一步：禁用NetworkManager&lt;/h2&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/NetworkManager/NetworkManager.conf&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo vim /etc/NetworkManager/NetworkManager.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;将&lt;code&gt;managed=true&lt;/code&gt;改为&lt;code&gt;managed=false&lt;/code&gt;，然后重启NetworkManager服务&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service network-manager restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果我们将&lt;code&gt;managed&lt;/code&gt;设为&lt;code&gt;true&lt;/code&gt;时，NetworkManager会接管所有网路设备的设定，而忽略&lt;code&gt;/etc/network/interfaces&lt;/code&gt;的内容。&lt;/p&gt;
&lt;h2 id="etcnetworkinterfaces"&gt;第二步：修改&lt;code&gt;/etc/network/interfaces&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;此文件原始状态只有以下行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/network/interfaces&lt;/span&gt;
auto lo
iface lo inet loopback
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;关于lo的这两行设定是必要的，请勿删除。删掉的话，系统将不具备 127.0.0.1 (localhost) 的网路介面。&lt;/p&gt;
&lt;p&gt;挂起网卡eth0：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;allow-hotplug eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;动态获取ipv4地址：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;auto eth1
iface eth1 inet dhcp
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;自动获取ipv6地址的方式：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;iface eth1 inet6 auto
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;采用静态ipv6地址的方式：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;iface eth1 inet6 static
    address your_ipv6_address
    netmask 64
    up route -A inet6 add default gw your_ipv6_gateway dev &lt;span class="nv"&gt;$IFACE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;每次修改过interfaces文件，都要运行以下命令重载设置才能生效。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service networking restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;此后，NetworkManager不会再占用CPU资源了。&lt;/p&gt;
&lt;h2 id="privacy-extension"&gt;Privacy Extension&lt;/h2&gt;
&lt;p&gt;Ubuntu默认对ipv6启用了privacy extension.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo vim /etc/sysctl.d/10-ipv6-privacy.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;在这个文件中，你会看到下面两行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;net.ipv6.conf.all.use_tempaddr &lt;span class="o"&gt;=&lt;/span&gt; 2
net.ipv6.conf.default.use_tempaddr &lt;span class="o"&gt;=&lt;/span&gt; 2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;看看你的ipv6地址，你会发现一些有趣的东西。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ip addr show
1: lo:  mtu 16436 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0:  mtu 1500 qdisc pfifo_fast state UP ql en 1000
    link/ether 00:05:06:07:08:09 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.100/24 brd 198.168.1.255 scope global eth0
    inet6 2789:1234:cdef:9876:395e:c9fd:78b4:d863/64 scope global temporary dynamic
       valid_lft 604349sec preferred_lft 85349sec
    inet6 2789:1234:cdef:9876:205:06ff:fe07:0809/64 scope global dynamic
       valid_lft 2591921sec preferred_lft 604721sec
    inet6 fe80::205:06ff:fe07:0809/64 scope link
       valid_lft forever preferred_lft forever
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;对于网卡eth0,你会发现有两个scope global的ipv6地址："scope global temporary dynamic" 和 "scope global dynamic".&lt;/p&gt;
&lt;p&gt;这两个地址都是有生命期的，在"preferred_lft"这么多秒之后，它们就会被新的地址所取代。&lt;/p&gt;
&lt;p&gt;如果，我们在文件&lt;code&gt;/etc/sysctl.d/10-ipv6-privacy.conf&lt;/code&gt;中取值2，那么那个"temporary"地址就会被用于对外连接。如果取1，就不会；如果取0，就完全禁用privacy extension.&lt;/p&gt;
&lt;p&gt;每次修改完此文件，需运行以下命令使设置生效：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service procps restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;此命令如果不起作用，可试试&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo sysctl -p
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="ipv6"&gt;禁用ipv6&lt;/h2&gt;
&lt;p&gt;编辑以下文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo vim /etc/sysctl.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;添加以下三行&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;net.ipv6.conf.all.disable_ipv6 &lt;span class="o"&gt;=&lt;/span&gt; 1
net.ipv6.conf.default.disable_ipv6 &lt;span class="o"&gt;=&lt;/span&gt; 1
net.ipv6.conf.lo.disable_ipv6 &lt;span class="o"&gt;=&lt;/span&gt; 1
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;重启procps服务&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service procps restart
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo sysctl -p
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果，还不起作用，可能就要重启系统了。&lt;/p&gt;
&lt;h2 id="_1"&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://codeghar.wordpress.com/2012/08/03/ipv6-in-ubuntu-12-04/"&gt;IPv6 in Ubuntu 12.04&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="NetworkManager"></category><category term="Ubuntu"></category><category term="IPv6"></category><category term="interfaces"></category></entry><entry><title>Ubuntu12.04更新后Unity 3D无法工作</title><link href="http://yysfire.github.io/linux/unity-3d-does-not-work-after-upgrade-on-ubuntu-12.04.html" rel="alternate"></link><updated>2012-10-07T16:50:01+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-07:linux/unity-3d-does-not-work-after-upgrade-on-ubuntu-12.04.html</id><summary type="html">
&lt;p&gt;Ubuntu12.04更新后Unity 3D无法工作，运行以下命令&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;/usr/lib/nux/unity_support_test -p
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;得到如下结果：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;X Error of failed request:  BadWindow &lt;span class="o"&gt;(&lt;/span&gt;invalid Window parameter&lt;span class="o"&gt;)&lt;/span&gt;
Major opcode of failed request:  138 &lt;span class="o"&gt;(&lt;/span&gt;NV-GLX&lt;span class="o"&gt;)&lt;/span&gt;
Minor opcode of failed request:  4 &lt;span class="o"&gt;()&lt;/span&gt;
Resource id in failed request:  0x26f
Serial number of failed request:  41
Current serial number in output stream:  41
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这是因为更新过xserver-xorg-core这个软件包所致。此包包含以下文件：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;/usr/lib/xorg/modules/extensions/libglx.so
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;如果使用的是自己从NVIDIA官网上下载的驱动，那么此文件必须是一个软链接，指向以下文件：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;/usr/lib/xorg/modules/extensions/libglx.so.XXX.YY
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这里，XXX和YY给出的是驱动版本。因此，每当xserver-xorg-core这个软件包更新后，就把这个软链接文件给覆盖掉了，导致GLX相关的应用程序无法使用Nvidia驱动。&lt;/p&gt;
&lt;p&gt;解决方法当然是重新创建这个软链接：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mv /usr/lib/xorg/modules/extensions/libglx.so /usr/lib/xorg/modules/extensions/libglx.so_backup
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ln -s /usr/lib/xorg/modules/extensions/libglx.so.XXX.YY /usr/lib/xorg/modules/extensions/libglx.so
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;然后，重启图形界面服务就可以看到Unity 3D正常工作了。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service lightdm restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;以后，每次更新过xserver-xorg-core这个软件包，就要记得进行以上操作。&lt;/p&gt;
&lt;p&gt;还有另外一种情况，也会导致Unity 3D无法工作，那就是更新过libgl1-mesa-glx，unity测试结果如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;/usr/lib/nux/unity_support_test -p
OpenGL vendor string:   NVIDIA Corporation
OpenGL renderer string: GeForce 7300 GT/PCIe/SSE2
OpenGL version string:  1.4 &lt;span class="o"&gt;(&lt;/span&gt;2.1.2 NVIDIA 295.59&lt;span class="o"&gt;)&lt;/span&gt;

Not software rendered:    yes
Not blacklisted:          yes
GLX fbconfig:             yes
GLX texture from pixmap:  yes
GL npot or rect textures: yes
GL vertex program:        yes
GL fragment program:      yes
GL vertex buffer object:  no
GL framebuffer object:    yes
GL version is 1.4+:       yes

Unity 3D supported:       no
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;运行命令&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ldd /usr/bin/glxinfo
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;你会看到&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;linux-vdso.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;  &lt;span class="o"&gt;(&lt;/span&gt;0x00007ffffe7d9000&lt;span class="o"&gt;)&lt;/span&gt;
libGL.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff5442000&lt;span class="o"&gt;)&lt;/span&gt;
libX11.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libX11.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff510e000&lt;span class="o"&gt;)&lt;/span&gt;
libc.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff4d50000&lt;span class="o"&gt;)&lt;/span&gt;
libglapi.so.0 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libglapi.so.0 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff4b2b000&lt;span class="o"&gt;)&lt;/span&gt;
libXext.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXext.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff491a000&lt;span class="o"&gt;)&lt;/span&gt;
libXdamage.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXdamage.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff4716000&lt;span class="o"&gt;)&lt;/span&gt;
libXfixes.so.3 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXfixes.so.3 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff4510000&lt;span class="o"&gt;)&lt;/span&gt;
libX11-xcb.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libX11-xcb.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff430e000&lt;span class="o"&gt;)&lt;/span&gt;
libxcb-glx.so.0 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libxcb-glx.so.0 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff40f6000&lt;span class="o"&gt;)&lt;/span&gt;
libxcb.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libxcb.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff3ed8000&lt;span class="o"&gt;)&lt;/span&gt;
libXxf86vm.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXxf86vm.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff3cd3000&lt;span class="o"&gt;)&lt;/span&gt;
libdrm.so.2 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libdrm.so.2 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff3ac7000&lt;span class="o"&gt;)&lt;/span&gt;
libpthread.so.0 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libpthread.so.0 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff38aa000&lt;span class="o"&gt;)&lt;/span&gt;
libdl.so.2 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libdl.so.2 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff36a6000&lt;span class="o"&gt;)&lt;/span&gt;
/lib64/ld-linux-x86-64.so.2 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff56c3000&lt;span class="o"&gt;)&lt;/span&gt;
libXau.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXau.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff34a2000&lt;span class="o"&gt;)&lt;/span&gt;
libXdmcp.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXdmcp.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff329c000&lt;span class="o"&gt;)&lt;/span&gt;
librt.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/librt.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f7ff3093000&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;其中，&lt;code&gt;libGL.so.1 =&amp;gt; /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 (0x00007f7ff5442000)&lt;/code&gt;表示GL模块使用的是开源的mesa驱动，而非Nvidia驱动。&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;ls -l&lt;/code&gt;命令查看此文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -l /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1
lrwxrwxrwx 1 root root 12  9月 11 07:40 /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 -&amp;gt; libGL.so.1.2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;得知，它是指向&lt;code&gt;/usr/lib/x86_64-linux-gnu/mesa/libGL.so.1.2&lt;/code&gt;的软链接文件。只要删掉这两个文件，再运行ldconfig就可以啦。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rm /usr/lib/libGL.so.1 /usr/lib/libGL.so.1.2
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ldconfig
&lt;span class="nv"&gt;$ &lt;/span&gt;ldd /usr/bin/glxinfo
    linux-vdso.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;  &lt;span class="o"&gt;(&lt;/span&gt;0x00007fff240f8000&lt;span class="o"&gt;)&lt;/span&gt;
    libGL.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/libGL.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb976a000&lt;span class="o"&gt;)&lt;/span&gt;
    libX11.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libX11.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb9436000&lt;span class="o"&gt;)&lt;/span&gt;
    libc.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb9078000&lt;span class="o"&gt;)&lt;/span&gt;
    libnvidia-tls.so.295.59 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/tls/libnvidia-tls.so.295.59 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb8e75000&lt;span class="o"&gt;)&lt;/span&gt;
    libnvidia-glcore.so.295.59 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/libnvidia-glcore.so.295.59 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb6b3b000&lt;span class="o"&gt;)&lt;/span&gt;
    libXext.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXext.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb6929000&lt;span class="o"&gt;)&lt;/span&gt;
    libdl.so.2 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libdl.so.2 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb6725000&lt;span class="o"&gt;)&lt;/span&gt;
    libxcb.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libxcb.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb6507000&lt;span class="o"&gt;)&lt;/span&gt;
    /lib64/ld-linux-x86-64.so.2 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb9aa3000&lt;span class="o"&gt;)&lt;/span&gt;
    libm.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libm.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb620c000&lt;span class="o"&gt;)&lt;/span&gt;
    libXau.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXau.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb6009000&lt;span class="o"&gt;)&lt;/span&gt;
    libXdmcp.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/x86_64-linux-gnu/libXdmcp.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f9bb5e03000&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;重启图形界面服务，Unity 3D就可以正常工作了。&lt;/p&gt;
&lt;h2 id="_1"&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://forums.debian.net/viewtopic.php?f=16&amp;amp;t=56833"&gt;What to do when GLX stops working with Nvidia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ubuntuforums.org/showthread.php?t=1722306&amp;amp;page=2"&gt;Nvidia, Unity, glxinfo couldn't find RGB GLX visual&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Ubuntu"></category><category term="Unity"></category><category term="NVIDIA"></category><category term="Linux"></category></entry><entry><title>让Ubuntu12.04在启动系统时显示grub菜单</title><link href="http://yysfire.github.io/linux/show-grub-menu-when-ubuntu-12.04-startup.html" rel="alternate"></link><updated>2012-10-07T15:56:37+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-07:linux/show-grub-menu-when-ubuntu-12.04-startup.html</id><summary type="html">
&lt;p&gt;1) 确保安装了grub2&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install grub2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;2) 修改/etc/default/grub文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# If you change this file, run 'update-grub' afterwards to update&lt;/span&gt;
&lt;span class="c"&gt;# /boot/grub/grub.cfg.&lt;/span&gt;
&lt;span class="c"&gt;# For full documentation of the options in this file, see:&lt;/span&gt;
&lt;span class="c"&gt;#   info -f grub -n 'Simple configuration'&lt;/span&gt;

&lt;span class="nv"&gt;GRUB_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;GRUB_HIDDEN_TIMEOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;        &lt;span class="c"&gt;#本项留空&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_HIDDEN_TIMEOUT_QUIET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="c"&gt;#本项留空&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_TIMEOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10             &lt;span class="c"&gt;#grub菜单显示的秒数&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_DISTRIBUTOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;lsb_release -i -s 2&amp;gt; /dev/null &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo &lt;/span&gt;Debian&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"quiet splash"&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment to enable BadRAM filtering, modify to suit your needs&lt;/span&gt;
&lt;span class="c"&gt;# This works with Linux (no patch required) and with any kernel that obtains&lt;/span&gt;
&lt;span class="c"&gt;# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_BADRAM="0x01234567,0xfefefefe,0x89abcdef,0xefefefef"&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment to disable graphical terminal (grub-pc only)&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_TERMINAL=console&lt;/span&gt;

&lt;span class="c"&gt;# The resolution used on graphical terminal&lt;/span&gt;
&lt;span class="c"&gt;# note that you can use only modes which your graphic card supports via VBE&lt;/span&gt;
&lt;span class="c"&gt;# you can see them in real GRUB with the command `vbeinfo'&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_GFXMODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1280x1024

&lt;span class="c"&gt;# Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_DISABLE_LINUX_UUID=true&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment to disable generation of recovery mode menu entries&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_DISABLE_RECOVERY="true"&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment to get a beep at grub start&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_INIT_TUNE="480 440 1"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;3) 修改/etc/grub.d/30_os-prober文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo vim /etc/grub.d/30_os-prober
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;将下面三处的timeout都修改为和/etc/default/grub中的timeout一致，比如timeout=10。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;make_timeout &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"x${found_other_os}"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"x"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"x${1}"&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"x"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;      if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"x${GRUB_HIDDEN_TIMEOUT_QUIET}"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"xtrue"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;" --verbose"&lt;/span&gt;
      &lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;      if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"x${1}"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"x0"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;if [ "x\${timeout}" != "x-1" ]; then&lt;/span&gt;
&lt;span class="s"&gt;  if keystatus; then&lt;/span&gt;
&lt;span class="s"&gt;    if keystatus --shift; then&lt;/span&gt;
&lt;span class="s"&gt;      set timeout=-1&lt;/span&gt;
&lt;span class="s"&gt;    else&lt;/span&gt;
&lt;span class="s"&gt;      set timeout=10 #第一处&lt;/span&gt;
&lt;span class="s"&gt;    fi&lt;/span&gt;
&lt;span class="s"&gt;  else&lt;/span&gt;
&lt;span class="s"&gt;    if sleep$verbose --interruptible 3 ; then&lt;/span&gt;
&lt;span class="s"&gt;      set timeout=10 #第二处&lt;/span&gt;
&lt;span class="s"&gt;    fi&lt;/span&gt;
&lt;span class="s"&gt;  fi&lt;/span&gt;
&lt;span class="s"&gt;fi&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;if [ "x\${timeout}" != "x-1" ]; then&lt;/span&gt;
&lt;span class="s"&gt;  if sleep$verbose --interruptible ${GRUB_HIDDEN_TIMEOUT} ; then&lt;/span&gt;
&lt;span class="s"&gt;    set timeout=10 #第三处&lt;/span&gt;
&lt;span class="s"&gt;  fi&lt;/span&gt;
&lt;span class="s"&gt;fi&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
      &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    fi&lt;/span&gt;
&lt;span class="k"&gt;  fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;3) 更新grub.cfg&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;以后，开机就会看到10秒钟的grub菜单。&lt;/p&gt;</summary><category term="Ubuntu"></category><category term="grub"></category><category term="Linux"></category></entry><entry><title>从源代码制作deb包的两种方法以及修改已有deb包</title><link href="http://yysfire.github.io/linux/building-deb-package-from-source-and-modify-deb-package.html" rel="alternate"></link><updated>2012-10-07T17:40:51+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-06:linux/building-deb-package-from-source-and-modify-deb-package.html</id><summary type="html">
&lt;h2 id="deb"&gt;制作deb包&lt;/h2&gt;
&lt;h3 id="1"&gt;1. 原理&lt;/h3&gt;
&lt;p&gt;1) deb包通常包含两部分：控制信息(DEBIAN目录)、安装内容(模拟"/"目录)&lt;/p&gt;
&lt;p&gt;2) 通过解开已有的deb包看其中内容&lt;/p&gt;
&lt;p&gt;i. 释放安装内容到dirname目录中&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -X xxx.deb dirname
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;ii. 释放控制信息到当前目录下的DEBIAN子目录中&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -e xxx.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="2"&gt;2. 准备&lt;/h3&gt;
&lt;p&gt;1) 安装相关工具&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install dh-make checkinstall
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;2) 下载示例软件源码包&lt;/p&gt;
&lt;p&gt;以游戏模拟器为例（也可使用其它源码包），制作它的deb包，下载地址：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://prdownloads.sourceforge.net/fceultra/fceu-0.98.12.src.tar.bz2"&gt;http://prdownloads.sourceforge.net/fceultra/fceu-0.98.12.src.tar.bz2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="3-checkinstalldeb"&gt;3. 方法一: 使用checkinstall方法创建deb包&lt;/h3&gt;
&lt;p&gt;checkinstall不仅可以生成deb包，还可以生成rpm包，使用简单。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tar xvjf fceu-0.98.12.src.tar.bz2 &lt;span class="c"&gt;# 解包&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;fceu;./configure;make &lt;span class="c"&gt;# 编译&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;checkinstall -D -install&lt;span class="o"&gt;=&lt;/span&gt;no --pkgversion&lt;span class="o"&gt;=&lt;/span&gt;0.98 --pkgname&lt;span class="o"&gt;=&lt;/span&gt;fceuxy make install &lt;span class="c"&gt;# 制作deb包&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;此时当前目录下生成了deb包。&lt;/p&gt;
&lt;h3 id="4-dpkgdeb"&gt;4. 方法二: 使用dpkg方法创建deb包&lt;/h3&gt;
&lt;p&gt;dpkg是最基本的制作deb包的方法，推荐使用&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tar xvjf fceu-0.98.12.src.tar.bz2 &lt;span class="c"&gt;# 解包&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;mv fceu fceu-0.98 &lt;span class="c"&gt;# 改目录名为 包名-版本号&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;fceu-0.98
&lt;span class="nv"&gt;$ &lt;/span&gt;dh_make -f ../fceu-0.98.12.src.tar.bz2 &lt;span class="c"&gt;# 生成制作deb包所需的默认信息&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;此时当前目录下生成了debian目录，此时通常修改两个文件：
1. 修改debian/control文件，配置你的信息，具体字段见参考资料部分
1. 修改debian/rules脚本，它决定编译参数(也可以不改)&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;    &lt;span class="o"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;dpkg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buildpackage&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rfakeroot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;此时可以看到，上层目录中已建立了deb包。&lt;/p&gt;
&lt;h2 id="deb_1"&gt;修改已有deb包&lt;/h2&gt;
&lt;p&gt;自己创建deb所需目录结构(控制信息和安装内容)，然后打包，一般使用这种方法来修改已有的deb包，而不是新建deb包，命令如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -X xxx.deb &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="c"&gt;# 解包安装内容&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd test&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -e ../xxx.deb &lt;span class="c"&gt;# 解包控制信息&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;修改DEBIAN目录下的内容，然后重新打包：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ../
&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -b &lt;span class="nb"&gt;test &lt;/span&gt;xxx_new.deb &lt;span class="c"&gt;# 重新打包&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="deb_2"&gt;关于deb包的常用命令&lt;/h2&gt;
&lt;p&gt;1) 查看deb包含有哪些文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -c xxx.deb &lt;span class="c"&gt;# 安装前根据deb文件查看&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -L debname &lt;span class="c"&gt;# 安装后根据包名查看&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;2) 安装deb包&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -i xxx.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;3) 查看某个文件属于哪个deb包&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -S filefullpath
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;4) 卸载deb包&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -r debname
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;5) 完全卸载deb包（包含配置文件)&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -P debname
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;6) 下载源码包&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;apt-get &lt;span class="nb"&gt;source &lt;/span&gt;packagename
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;7) 根据软件包名模糊检索&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg -l|grep xxx &lt;span class="c"&gt;#在已安装的软件包列表中搜索&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-cache search xxx &lt;span class="c"&gt;#在源中的所有软件包列表中搜索&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_1"&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;debian/control文件中信息说明&lt;ol&gt;
&lt;li&gt;Package 包名&lt;/li&gt;
&lt;li&gt;Version 版本&lt;/li&gt;
&lt;li&gt;Architecture 目标机架构（i386,arm,amd64等）&lt;/li&gt;
&lt;li&gt;Maintainer 维护者&lt;/li&gt;
&lt;li&gt;Depends 依赖软件包&lt;/li&gt;
&lt;li&gt;Description 描述&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ibm.com/developerworks/cn/linux/l-cn-checkinstall/index.html"&gt;checkinstall详细例程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.debian.org/doc/manuals/maint-guide/index.zh-cn.html"&gt;官方的debian制作手册&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Debian"></category><category term="Ubuntu"></category><category term="deb"></category><category term="Linux"></category></entry><entry><title>Transmission配置文件各参数设置说明</title><link href="http://yysfire.github.io/linux/transmission-setting-file.html" rel="alternate"></link><updated>2012-10-04T14:58:57+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-10-04:linux/transmission-setting-file.html</id><summary type="html">
&lt;p&gt;系统环境：Ubuntu 12.04 amd64 + Transmission-GTK 2.51 (13280)&lt;/p&gt;
&lt;p&gt;配置文件路径：~/.config/transmission/settings.json&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="s2"&gt;"alt-speed-up"&lt;/span&gt;: 500, &lt;span class="c"&gt;#计划时段上传限速值&lt;/span&gt;
&lt;span class="s2"&gt;"alt-speed-down"&lt;/span&gt;: 500, &lt;span class="c"&gt;#计划时段下载限速值&lt;/span&gt;
&lt;span class="s2"&gt;"alt-speed-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"alt-speed-time-begin"&lt;/span&gt;: 540,
&lt;span class="s2"&gt;"alt-speed-time-day"&lt;/span&gt;: 127,
&lt;span class="s2"&gt;"alt-speed-time-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;, &lt;span class="c"&gt;#启用计划工作，为false时，以上计划配置则不生效&lt;/span&gt;
&lt;span class="s2"&gt;"alt-speed-time-end"&lt;/span&gt;: 420, &lt;span class="c"&gt;#计划结束时间，为零点到开始时间的分钟数，比如7:00就是7*60=420。另外，该时间是用的GMT时间，即北京时间-8小时。比如你计划北京时间7点30分开始，这个数字应该是（7-8+24）*60+30=1410&lt;/span&gt;
&lt;span class="s2"&gt;"bind-address-ipv4"&lt;/span&gt;: &lt;span class="s2"&gt;"0.0.0.0"&lt;/span&gt;,
&lt;span class="s2"&gt;"bind-address-ipv6"&lt;/span&gt;: &lt;span class="s2"&gt;"::"&lt;/span&gt;,
&lt;span class="s2"&gt;"blocklist-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"blocklist-updates-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"blocklist-url"&lt;/span&gt;: &lt;span class="s2"&gt;"http://www.example.com/blocklist"&lt;/span&gt;,
&lt;span class="s2"&gt;"cache-size-mb"&lt;/span&gt;: 4, &lt;span class="c"&gt;#缓存大小，以MB为单位，建议设大一些，避免频繁读写硬盘而伤硬盘，建议设为内存大小的1/6～1/4&lt;/span&gt;
&lt;span class="s2"&gt;"compact-view"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"dht-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;, &lt;span class="c"&gt;#关闭DHT（不通过tracker寻找节点）功能，不少PT站的要求，但BT下载设置为true会使得下载更好&lt;/span&gt;
&lt;span class="s2"&gt;"download-dir"&lt;/span&gt;: &lt;span class="s2"&gt;"/home/yys/Downloads"&lt;/span&gt;, &lt;span class="c"&gt;#下载的内容存放的目录&lt;/span&gt;
&lt;span class="s2"&gt;"download-queue-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"download-queue-size"&lt;/span&gt;: 5,
&lt;span class="s2"&gt;"encryption"&lt;/span&gt;: 1, &lt;span class="c"&gt;#0=不加密，1=优先加密，2=必须加密&lt;/span&gt;
&lt;span class="s2"&gt;"idle-seeding-limit"&lt;/span&gt;: 30,
&lt;span class="s2"&gt;"idle-seeding-limit-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"incomplete-dir"&lt;/span&gt;: &lt;span class="s2"&gt;"/home/yys/Downloads"&lt;/span&gt;,
&lt;span class="s2"&gt;"incomplete-dir-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"inhibit-desktop-hibernation"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"lpd-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;, &lt;span class="c"&gt;#禁用LDP（本地节点发现，用于在本地网络寻找节点）,不少PT站的要求&lt;/span&gt;
&lt;span class="s2"&gt;"main-window-height"&lt;/span&gt;: 500,
&lt;span class="s2"&gt;"main-window-is-maximized"&lt;/span&gt;: 0,
&lt;span class="s2"&gt;"main-window-width"&lt;/span&gt;: 615,
&lt;span class="s2"&gt;"main-window-x"&lt;/span&gt;: 337,
&lt;span class="s2"&gt;"main-window-y"&lt;/span&gt;: 211,
&lt;span class="s2"&gt;"message-level"&lt;/span&gt;: 2,
&lt;span class="s2"&gt;"open-dialog-dir"&lt;/span&gt;: &lt;span class="s2"&gt;"/home/yys/\u684c\u9762"&lt;/span&gt;,
&lt;span class="s2"&gt;"peer-congestion-algorithm"&lt;/span&gt;: &lt;span class="s2"&gt;""&lt;/span&gt;,
&lt;span class="s2"&gt;"peer-limit-global"&lt;/span&gt;: 240, &lt;span class="c"&gt;#全局连接数&lt;/span&gt;
&lt;span class="s2"&gt;"peer-limit-per-torrent"&lt;/span&gt;: 60, &lt;span class="c"&gt;#每个种子最多的连接数&lt;/span&gt;
&lt;span class="s2"&gt;"peer-port"&lt;/span&gt;: 51413, &lt;span class="c"&gt;#预设的port口&lt;/span&gt;
&lt;span class="s2"&gt;"peer-port-random-high"&lt;/span&gt;: 65535,
&lt;span class="s2"&gt;"peer-port-random-low"&lt;/span&gt;: 49152,
&lt;span class="s2"&gt;"peer-port-random-on-start"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;, &lt;span class="c"&gt;#不建议改为true&lt;/span&gt;
&lt;span class="s2"&gt;"peer-socket-tos"&lt;/span&gt;: &lt;span class="s2"&gt;"default"&lt;/span&gt;,
&lt;span class="s2"&gt;"pex-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;, &lt;span class="c"&gt;#禁用PEX（节点交换，用于同已与您相连接的节点交换节点名单）,不少PT站的要求&lt;/span&gt;
&lt;span class="s2"&gt;"port-forwarding-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"preallocation"&lt;/span&gt;: 1, &lt;span class="c"&gt;#预分配文件磁盘空间，0=关闭，1=快速，2=完全。建议取1开启该功能，防止下载大半了才发现磁盘不够。取2时，可以减少磁盘碎片，但速度较慢。&lt;/span&gt;
&lt;span class="s2"&gt;"prefetch-enabled"&lt;/span&gt;: 1,
&lt;span class="s2"&gt;"queue-stalled-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"queue-stalled-minutes"&lt;/span&gt;: 30,
&lt;span class="s2"&gt;"ratio-limit"&lt;/span&gt;: 2,
&lt;span class="s2"&gt;"ratio-limit-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"rename-partial-files"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;, &lt;span class="c"&gt;#在未完成的文件名后添加后缀.part,false=禁用&lt;/span&gt;
&lt;span class="s2"&gt;"rpc-authentication-required"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"rpc-bind-address"&lt;/span&gt;: &lt;span class="s2"&gt;"0.0.0.0"&lt;/span&gt;,
&lt;span class="s2"&gt;"rpc-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"rpc-password"&lt;/span&gt;: &lt;span class="s2"&gt;"{c8c083168db9fff40b5136b6d0f3f4a864110a78\/oH51JaE"&lt;/span&gt;, &lt;span class="c"&gt;#web-ui的密码，可直接修改，重新运行或者reload服务的时候会自动被加密&lt;/span&gt;
&lt;span class="s2"&gt;"rpc-port"&lt;/span&gt;: 9091, &lt;span class="c"&gt;#默认web-ui的port口，可自行更改&lt;/span&gt;
&lt;span class="s2"&gt;"rpc-url"&lt;/span&gt;: &lt;span class="s2"&gt;"/transmission/"&lt;/span&gt;,
&lt;span class="s2"&gt;"rpc-username"&lt;/span&gt;: &lt;span class="s2"&gt;"transmission"&lt;/span&gt;, &lt;span class="c"&gt;#默认登入名称&lt;/span&gt;
&lt;span class="s2"&gt;"rpc-whitelist"&lt;/span&gt;: &lt;span class="s2"&gt;"127.0.0.1"&lt;/span&gt;,
&lt;span class="s2"&gt;"rpc-whitelist-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;, &lt;span class="c"&gt;#如果你要让其他网段连入，请设false&lt;/span&gt;
&lt;span class="s2"&gt;"scrape-paused-torrents-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"script-torrent-done-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"script-torrent-done-filename"&lt;/span&gt;: &lt;span class="s2"&gt;"/home/yys"&lt;/span&gt;,
&lt;span class="s2"&gt;"seed-queue-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"seed-queue-size"&lt;/span&gt;: 10,
&lt;span class="s2"&gt;"show-backup-trackers"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"show-extra-peer-details"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"show-filterbar"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"show-notification-area-icon"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"show-options-window"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"show-statusbar"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"show-toolbar"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"show-tracker-scrapes"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"sort-mode"&lt;/span&gt;: &lt;span class="s2"&gt;"sort-by-age"&lt;/span&gt;,
&lt;span class="s2"&gt;"sort-reversed"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"speed-limit-down"&lt;/span&gt;: 300, &lt;span class="c"&gt;#平时的下载限速&lt;/span&gt;
&lt;span class="s2"&gt;"speed-limit-down-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;, &lt;span class="c"&gt;#启用平时下载限速&lt;/span&gt;
&lt;span class="s2"&gt;"speed-limit-up"&lt;/span&gt;: 30, &lt;span class="c"&gt;#平时上传限速&lt;/span&gt;
&lt;span class="s2"&gt;"speed-limit-up-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;, &lt;span class="c"&gt;#启用平时上传限速&lt;/span&gt;
&lt;span class="s2"&gt;"start-added-torrents"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"statusbar-stats"&lt;/span&gt;: &lt;span class="s2"&gt;"total-ratio"&lt;/span&gt;,
&lt;span class="s2"&gt;"torrent-added-notification-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"torrent-complete-notification-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"torrent-complete-sound-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"trash-can-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
&lt;span class="s2"&gt;"trash-original-torrent-files"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
&lt;span class="s2"&gt;"umask"&lt;/span&gt;: 18,
&lt;span class="s2"&gt;"upload-slots-per-torrent"&lt;/span&gt;: 14
&lt;span class="s2"&gt;"utp-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;, &lt;span class="c"&gt;#启用μTP协议&lt;/span&gt;
&lt;span class="s2"&gt;"watch-dir"&lt;/span&gt;: &lt;span class="s2"&gt;"/home/yys/\u4e0b\u8f7d"&lt;/span&gt;,
&lt;span class="s2"&gt;"watch-dir-enabled"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_1"&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://trac.transmissionbt.com/wiki/EditConfigFiles"&gt;Editing Configuration Files&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Transmission"></category><category term="Ubuntu"></category><category term="Linux"></category></entry><entry><title>Ubuntu12.04系统下修改启动画面和控制台的分辨率</title><link href="http://yysfire.github.io/linux/change-startup-screen-and-resolution-of-ubuntu-12.04.html" rel="alternate"></link><updated>2012-11-04T18:23:07+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-09-12:linux/change-startup-screen-and-resolution-of-ubuntu-12.04.html</id><summary type="html">
&lt;p&gt;我的软硬件环境如下：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;系统：&lt;/span&gt;&lt;span class="n"&gt;Ubuntu&lt;/span&gt; &lt;span class="mf"&gt;12.04&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="err"&gt;位&lt;/span&gt;
&lt;span class="err"&gt;显卡：&lt;/span&gt;&lt;span class="n"&gt;Geforce&lt;/span&gt; &lt;span class="mi"&gt;7300&lt;/span&gt; &lt;span class="n"&gt;GT&lt;/span&gt;
&lt;span class="err"&gt;显示器：&lt;/span&gt;&lt;span class="n"&gt;ViewSonic&lt;/span&gt; &lt;span class="n"&gt;VG800&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;安装完显卡驱动后，启动画面和控制台都无法显示，显示器提示“频率超出范围”。原因就是启动画面和控制台的分辨率是我的显示器所不支持的，解决方法当然是修改它们的分辨率。&lt;/p&gt;
&lt;p&gt;1）安装 grub2&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install grub2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;2）修改 /etc/default/grub 文件&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo gedit /etc/default/grub

:::bash
&lt;span class="c"&gt;# If you change this file, run 'update-grub' afterwards to update&lt;/span&gt;
&lt;span class="c"&gt;# /boot/grub/grub.cfg.&lt;/span&gt;

&lt;span class="nv"&gt;GRUB_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="c"&gt;#GRUB_HIDDEN_TIMEOUT=0&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_HIDDEN_TIMEOUT_QUIET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_TIMEOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10
&lt;span class="nv"&gt;GRUB_DISTRIBUTOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;lsb_release -i -s 2&amp;gt; /dev/null &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo &lt;/span&gt;Debian&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"quiet splash"&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment to disable graphical terminal (grub-pc only)&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_TERMINAL=console&lt;/span&gt;

&lt;span class="c"&gt;# The resolution used on graphical terminal&lt;/span&gt;
&lt;span class="c"&gt;# note that you can use only modes which your graphic card supports via VBE&lt;/span&gt;
&lt;span class="c"&gt;# you can see them in real GRUB with the command `vbeinfo'&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_GFXMODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1280x1024 &lt;span class="c"&gt;#去掉此行的注释，将值修改为自己显示器的最佳分辨率&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_DISABLE_LINUX_UUID=true&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment to disable generation of recovery mode menu entries&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_DISABLE_LINUX_RECOVERY="true"&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment to get a beep at grub start&lt;/span&gt;
&lt;span class="c"&gt;#GRUB_INIT_TUNE="480 440 1"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;3) 修改 /etc/grub.d/00_header 文件&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;set gfxmode=${GRUB_GFXMODE}&lt;/code&gt; 这行下面添加新行，内容是：&lt;code&gt;set gfxpayload=keep&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4）更新 grub:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub &lt;span class="c"&gt;#或者sudo update-grub2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;5）重启系统&lt;/p&gt;</summary><category term="Ubuntu"></category><category term="grub"></category><category term="Linux"></category></entry><entry><title>Ubuntu12.04 x64系统手动编译安装NVIDIA官方驱动</title><link href="http://yysfire.github.io/linux/build-and-install-official-NVIDIA-driver-manually-on-ubuntu-12.04.html" rel="alternate"></link><updated>2012-10-07T15:32:19+08:00</updated><author><name>Yysfire</name></author><id>tag:yysfire.github.io,2012-09-10:linux/build-and-install-official-NVIDIA-driver-manually-on-ubuntu-12.04.html</id><summary type="html">
&lt;p&gt;我的系统环境是：Ubuntu 12.04 64位版，显卡为NVIDIA Geforce 7300 GT。&lt;/p&gt;
&lt;p&gt;首先，请确认linux-restricted-modules和linux-restricted-modules-common这两个模块没被安装，如果安装过请卸载掉。&lt;/p&gt;
&lt;h2 id="nvidia"&gt;手动编译安装NVIDIA官方驱动&lt;/h2&gt;
&lt;p&gt;1) 下载适合自己显卡的官方驱动&lt;/p&gt;
&lt;p&gt;Nvidia中文官网是 &lt;a href="http://www.nvidia.cn/page/home.html"&gt;http://www.nvidia.cn/page/home.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载自己显卡对应的驱动，放到/home/用户名/目录下，我下载的是 NVIDIA-Linux-x86_64-304.43.run&lt;/p&gt;
&lt;p&gt;2) 卸载之前安装过的NVIDIA受限驱动包&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get purge nvidia-*
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get autoremove
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;3) 安装编译依赖&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential pkg-config xserver-xorg-dev linux-headers-&lt;span class="sb"&gt;`&lt;/span&gt;uname -r&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;4) 屏蔽掉开源驱动&lt;/p&gt;
&lt;p&gt;编辑blacklist.conf文件，&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo gedit /etc/modprobe.d/blacklist.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;在文件尾部添加以下几行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;blacklist nouveau
blacklist vga16fb
blacklist rivafb
blacklist nvidiafb
blacklist rivatv
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;5) 重启电脑&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;6) 关闭图形环境&lt;/p&gt;
&lt;p&gt;进入登录界面后，按"Ctrl-Alt-F1"，进入控制台，运行以下命令关闭图形环境&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo /etc/init.d/kdm stop  &lt;span class="c"&gt;#适用于Kubuntu&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo /etc/init.d/gdm stop  &lt;span class="c"&gt;#适用于Ubuntu&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo stop lightdm          &lt;span class="c"&gt;#适用于Ubuntu11.10 and later&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;7) 开始安装&lt;/p&gt;
&lt;p&gt;进入之前下载的驱动安装文件所在目录，运行：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo sh NVIDIA-Linux-x86_64-304.43.run
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;安装过程中:&lt;/p&gt;
&lt;p&gt;如果提示有旧驱动，询问是否删除旧驱动，选Yes；&lt;/p&gt;
&lt;p&gt;如果提示缺少某某模块（modules），询问是否上网下载，选No；&lt;/p&gt;
&lt;p&gt;如果提示编译模块，询问是否进行编译，选Ok；&lt;/p&gt;
&lt;p&gt;如果提示将要修改Xorg.conf，询问是否允许，选Yes； &lt;/p&gt;
&lt;p&gt;如果出现以下错误：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;ERROR: Unable to load the kernel module &lt;span class="s1"&gt;'nvidia.ko'&lt;/span&gt;.  This happens most
       frequently when this kernel module was built against the wrong or
       improperly configured kernel sources, with a version of gcc that differs
       from the one used to build the target kernel, or &lt;span class="k"&gt;if &lt;/span&gt;a driver such as
       rivafb/nvidiafb is present and prevents the NVIDIA kernel module from
       obtaining ownership of the NVIDIA graphics device&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;, or NVIDIA GPU
       installed in this system is not supported by this NVIDIA Linux graphics
       driver release.
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;就试试以下命令：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo sh NVIDIA-Linux-x86_64-304.43.run -k &lt;span class="k"&gt;$(&lt;/span&gt;uname -r&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;8) 重启图形环境&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo /etc/init.d/kdm restart    &lt;span class="c"&gt;#适用于Kubuntu&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo /etc/init.d/gdm restart    &lt;span class="c"&gt;#适用于Ubuntu&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo start lightdm        &lt;span class="c"&gt;#适用于Ubuntu11.10 and later&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="nvidia_1"&gt;内核升级后自动安装NVIDIA驱动&lt;/h2&gt;
&lt;p&gt;这样手动安装的NVIDIA官方驱动，以后系统内核每更新一次，都要再重新安装一次。为了省去这个麻烦，我们可以做到让内核升级后自动安装NVIDIA驱动。&lt;/p&gt;
&lt;p&gt;首先确定驱动正常工作后, 必需先重启一次。&lt;/p&gt;
&lt;p&gt;然后，把你使用的驱动安装文件放到/home/username下，并生成链接。例如：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mv NVIDIA-Linux-x86_64-304.43.run /home/username
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ln -s /home/username/NVIDIA-Linux-x86_64-304.43.run /home/username/nvidia-driver
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这样做的目的是当你更换所用的驱动时，只需要删除原来的链接后再指定新的链接即可，不需要改变我们将使用的脚本。&lt;/p&gt;
&lt;p&gt;将以下内容写入自动安装NVIDIA驱动的脚本update-nvidia:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Set this to the exact path of the nvidia driver you plan to use&lt;/span&gt;
&lt;span class="c"&gt;# It is recommended to use a symlink here so that this script doesn't&lt;/span&gt;
&lt;span class="c"&gt;# have to be modified when you change driver versions.&lt;/span&gt;
&lt;span class="nv"&gt;DRIVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/username/nvidia-driver

&lt;span class="c"&gt;# Build new driver if it doesn't exist&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e /lib/modules/&lt;span class="nv"&gt;$1&lt;/span&gt;/kernel/drivers/video/nvidia.ko &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"NVIDIA driver already exists for this kernel."&lt;/span&gt; &amp;gt;&amp;amp;2
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Building NVIDIA driver for kernel $1"&lt;/span&gt; &amp;gt;&amp;amp;2
    sh &lt;span class="nv"&gt;$DRIVER&lt;/span&gt; -K -k &lt;span class="nv"&gt;$1&lt;/span&gt; -s -n 2&amp;gt;1 &amp;gt; /dev/null
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e /lib/modules/&lt;span class="nv"&gt;$1&lt;/span&gt;/kernel/drivers/video/nvidia.ko &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"   SUCCESS: Driver installed for kernel $1"&lt;/span&gt; &amp;gt;&amp;amp;2
    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"   FAILURE: See /var/log/nvidia-installer.log"&lt;/span&gt; &amp;gt;&amp;amp;2
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;基本上，原理是检查新安装的内核是否安装了正确的NVIDIA驱动，如果没有，脚本将自动为新内核安装驱动模块。&lt;/p&gt;
&lt;p&gt;安装该脚本：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir -p /etc/kernel/postinst.d
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo install update-nvidia /etc/kernel/postinst.d
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;这样，以后内核升级后就会自动安装NVIDIA驱动, 不用再每更新一次内核就重装一次驱动。&lt;/p&gt;
&lt;h2 id="nouveau"&gt;使用开源nouveau驱动&lt;/h2&gt;
&lt;p&gt;出于某些原因，你可能想用回系统安装之初的开源驱动。&lt;/p&gt;
&lt;p&gt;首先，确保开源驱动没被卸载，否则，运行以下命令重新安装。&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo aptitude install xserver-xorg-video-nouveau
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;其次，编辑/etc/modprobe.d/blacklist.conf，去掉屏蔽nouveau的行&lt;/p&gt;
&lt;p&gt;然后，就有两种方法了：&lt;/p&gt;
&lt;p&gt;1.1 不使用xorg.conf&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mv /etc/X11/xorg.conf /etc/X11/xorg.conf.bak
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;1.2 使用xorg.conf&lt;/p&gt;
&lt;p&gt;由于官方驱动和nouveau驱动的xorg.conf现在是兼容的, 只需把xorg.conf中的&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;Driver         &lt;span class="s2"&gt;"nvidia"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;改成：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;Driver        &lt;span class="s2"&gt;"nouveau"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;Section &lt;span class="s2"&gt;"Device"&lt;/span&gt;
    Identifier     &lt;span class="s2"&gt;"Device0"&lt;/span&gt;
&lt;span class="c"&gt;#   Driver         "nvidia"&lt;/span&gt;
    Driver         &lt;span class="s2"&gt;"nouveau"&lt;/span&gt;
    VendorName     &lt;span class="s2"&gt;"NVIDIA Corporation"&lt;/span&gt;
EndSection
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id="_1"&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://forum.ubuntu.org.cn/viewtopic.php?f=42&amp;amp;t=141431"&gt;http://forum.ubuntu.org.cn/viewtopic.php?f=42&amp;amp;t=141431&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Ubuntu"></category><category term="NVIDIA"></category><category term="Linux"></category></entry></feed>